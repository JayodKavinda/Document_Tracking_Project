// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

namespace WebAPI.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20210524151755_AddVehicalFrom")]
    partial class AddVehicalFrom
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityRole");

                    b.HasData(
                        new
                        {
                            Id = "606265c8-5dc8-413a-a7fe-208caac5036d",
                            ConcurrencyStamp = "e649cd83-dc0f-497c-ad31-d256b9152daa",
                            Name = "Visitor",
                            NormalizedName = "VISITOR"
                        },
                        new
                        {
                            Id = "0d06112c-5347-4af9-8d0e-c353aee238e2",
                            ConcurrencyStamp = "b723094f-68db-48df-8037-32e54ab7b858",
                            Name = "Dean",
                            NormalizedName = "DEAN"
                        },
                        new
                        {
                            Id = "3d4328c7-d742-4a67-a36f-724e6d067504",
                            ConcurrencyStamp = "487084a2-aecd-411d-8903-d007c048cdf6",
                            Name = "Hod",
                            NormalizedName = "HOD"
                        },
                        new
                        {
                            Id = "d7f0e397-66d8-40f9-b8f4-240986c2b4f4",
                            ConcurrencyStamp = "587e01bc-0a89-4720-96b4-98b21d41cf78",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("IdentityUserRole<string>");
                });

            modelBuilder.Entity("WebAPI.Models.Form.RisograghForm", b =>
                {
                    b.Property<int>("RisograghFormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CopyTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FinalLevelUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FinalUserDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("FormModelId")
                        .HasColumnType("int");

                    b.Property<string>("FormModelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InitDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfCopies")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPage")
                        .HasColumnType("int");

                    b.Property<string>("PaperProvided")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeOfCopies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RisograghFormId");

                    b.HasIndex("UserId");

                    b.ToTable("RisograghForm");
                });

            modelBuilder.Entity("WebAPI.Models.Form.VehicalReservationForm", b =>
                {
                    b.Property<int>("VehicalReservationFormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EstimateDistance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstimateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormCurrentLevel")
                        .HasColumnType("int");

                    b.Property<int>("FormModelId")
                        .HasColumnType("int");

                    b.Property<string>("FormModelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InitDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("IsVehicalOK")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Level2UserDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level2UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Level3UserDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level3UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Level4UserDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Level4UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Officers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReturnTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Vote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isLevel2Approved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isLevel3Approved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isLevel4Approved")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicalReservationFormId");

                    b.HasIndex("UserId");

                    b.ToTable("VehicalReservationForms");
                });

            modelBuilder.Entity("WebAPI.Models.UserModel.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NameTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebAPI.Models.Form.RisograghForm", b =>
                {
                    b.HasOne("WebAPI.Models.UserModel.User", null)
                        .WithMany("RisograghForms")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("WebAPI.Models.Form.VehicalReservationForm", b =>
                {
                    b.HasOne("WebAPI.Models.UserModel.User", null)
                        .WithMany("VehicleReservationForms")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("WebAPI.Models.UserModel.User", b =>
                {
                    b.Navigation("RisograghForms");

                    b.Navigation("VehicleReservationForms");
                });
#pragma warning restore 612, 618
        }
    }
}

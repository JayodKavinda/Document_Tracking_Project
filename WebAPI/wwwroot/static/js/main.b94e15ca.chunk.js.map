{"version":3,"sources":["app/stores/commonStore.ts","app/stores/modalStore.ts","app/api/agent.ts","app/stores/risographFormStore.ts","app/stores/vehicalReservationFormStore.ts","app/stores/userStore.ts","app/stores/rootStore.ts","features/nav/NavBar.tsx","app/layout/LoadingComponent.tsx","app/layout/TopMenuBar.tsx","features/risographForms/dashboard/RisographFormList.tsx","features/vehicalReservationForm/dashboard/VehicalReservationFormList.tsx","app/layout/SideMenu.tsx","features/risographForms/dashboard/InboxRisographFormList.tsx","features/vehicalReservationForm/dashboard/InboxVehicalFormList.tsx","app/layout/InboxSildeMenu.tsx","app/layout/Home.tsx","features/risographForms/dashboard/RisographDashboard.tsx","app/common/Form/TextInput.tsx","features/user/LoginForm.tsx","features/home/HomePage.tsx","app/layout/FormSuccessModal.tsx","features/risographForms/form/RisographForm.tsx","features/risographForms/details/RisographFormDetails.tsx","features/risographForms/details/RisographFormManage.tsx","features/newDoc/NewDoc.tsx","app/layout/UnAutherized.tsx","app/layout/NotFound.tsx","app/common/modals/ModalContainer.tsx","features/risographForms/form/BlankForm.tsx","features/vehicalReservationForm/form/VeicalReservationForm.tsx","features/vehicalReservationForm/details/VehicalReserationFormDetails.tsx","features/vehicalReservationForm/details/VehicalFormMange.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["CommonStore","rootStore","this","observable","window","localStorage","getItem","action","token","setItem","id","userId","appLoaded","ModalStore","shallow","makeObservable","open","body","content","modal","flag","axios","defaults","baseURL","interceptors","request","use","config","headers","Authorization","error","Promise","reject","response","undefined","status","history","push","console","log","responseBody","data","sleep","ms","resolve","setTimeout","requests","url","get","then","post","put","list","listWithId","details","create","risographForm","update","risograghFormId","listInbox","current","login","user","register","vehicalReservationForm","vehicalReservationFormId","RisographFormStore","getRisographForm","risographForms","find","a","loadingInitial","agent","risograhForms","runInAction","forEach","risograhForm","catch","err","finally","inboxRisographForms","submitting","modalStore","openModal","selectedRisographForm","VehicalReservationFormStore","getVehicalReservationForm","vehicalReservationForms","inboxVehicalReservationForms","selectedVehicalReservationForm","UserStore","currentUser","computed","values","commonStore","setToken","setUserId","closeModal","currUser","configure","enforceActions","RootStoreContext","createContext","risographFormStore","userStore","vehicalReservationFormStore","observer","useContext","logout","Menu","fixed","inverted","Container","fluid","Item","header","as","NavLink","exact","to","name","Popup","trigger","Button","positive","icon","labelPosition","Icon","position","Image","avatar","spaced","src","Dropdown","pointing","text","firstName","Link","onClick","Dimmer","active","Loader","TopMenuBar","useRouteMatch","Input","placeholder","Segment","clearing","Group","divided","map","Content","Header","documentTitle","Meta","initDateTime","Description","purpose","dueDateTime","Extra","floated","color","Label","style","background","basic","formStatus","applicant","SideMenu","path","Grid","Column","width","height","vertical","marginTop","stretched","Card","image","meta","description","teacherName","vehicalForm","department","InboxSideMenu","InboxRisographFormList","Home","getUser","useEffect","approvedNum","pendingNum","rejectionNum","canceledNum","openSendDoc","form","size","margin","Subheader","marginLeft","centered","List","itemsPerRow","className","length","lastName","designation","extra","setAppLoaded","loadRisographForms","loadInboxRisographForms","loadVehicalReervationForms","loadInboxehicalReservationForms","TextInput","input","type","label","touched","Form","Field","LoginForm","textAlign","marginBotton","verticalAlign","padded","onSubmit","FORM_ERROR","render","handleSubmit","submitError","loading","HomePage","isLoggedIn","Inline","alt","Modal","onClose","Actions","createRisographForm","useState","numberOfPage","numberOfCopies","sizeOfCopies","paperProvided","copyTo","finalLevelUser","formModelName","setRisographForm","handleInputChange","event","currentTarget","value","parseInt","dividing","newRisographForm","required","onChange","control","ribbon","Divider","TextArea","Step","Title","match","loadRisographform","params","editRisographForm","updateForm","state","finalUserDateTime","formModelId","ButtonGroup","negative","NewDoc","wrapped","ui","UnAtherized","primary","NotFound","BlankForm","rows","createVehicalReservationForm","routeFrom","routeTo","returnFrom","returnTo","estimateTime","estimateDistance","vote","projectNo","officers","formCurrentLevel","level2UserId","isLevel2Approved","level3UserId","isVehicalOK","isLevel3Approved","level4UserId","isLevel4Approved","setvehicalReservationForm","newVehicalReservationForm","loadVehicalReservationform","editVehicalReservationForm","state1","state2","state3","i","newVehicalForm","component","RisographDashboard","RisographFormDetails","VehicalReservationFormDetails","RisographFormManage","VehicalFormManage","RisographForm","VehicalReservationForm","UnAutherized","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b94e15ca.chunk.js","sourcesContent":["import { action, observable, reaction } from \"mobx\";\r\nimport { act } from \"react-dom/test-utils\";\r\nimport { RootStore } from \"./rootStore\";\r\n\r\nexport default class CommonStore{\r\n    rootStore: RootStore;\r\n\r\n    constructor(rootStore :RootStore){\r\n        this.rootStore =rootStore;\r\n\r\n        // reaction(()=>this.token, token=>{\r\n        //     if(token){\r\n        //         window.localStorage.setItem('jwt', token)\r\n        //     }else{\r\n                \r\n        //     }\r\n        // })\r\n    }\r\n\r\n    @observable token:string|null =window.localStorage.getItem('jwt');\r\n    @observable userId:string|null =window.localStorage.getItem('userId');\r\n    @observable appLoaded =false;\r\n\r\n    @action setToken= (token:string|null)=>{\r\n        window.localStorage.setItem('jwt',token!);\r\n        this.token=token;\r\n\r\n    }\r\n\r\n    @action setUserId= (id:string|null)=>{\r\n        window.localStorage.setItem('userId',id!);\r\n        this.userId=id;\r\n\r\n    }\r\n\r\n    @action setAppLoaded=()=>{\r\n        this.appLoaded =true;\r\n    }\r\n}","import { RootStore } from \"./rootStore\";\r\nimport { observable, action, makeObservable } from \"mobx\";\r\n\r\nexport default class ModalStore {\r\n    rootStore: RootStore;\r\n    constructor(rootStore: RootStore) {\r\n        makeObservable(this);\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    @observable.shallow modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n    \r\n    @action openModal = (content: any) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    @action closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import axios, { AxiosResponse }  from 'axios';\r\nimport { history } from '../..';\r\nimport { IRisographForm } from '../models/risographForm';\r\nimport { IVehicalReservationForm } from '../models/vehicalReservationForm';\r\nimport { ICurrentUser, IUser, IUserForm } from '../models/user';\r\n\r\nvar flag= false;\r\n\r\n//axios.defaults.baseURL = 'https://localhost:5001/api';\r\naxios.defaults.baseURL = 'https://dtsruhuna.azurewebsites.net/api'\r\n\r\n\r\naxios.interceptors.request.use((config)=>{\r\n    const token=window.localStorage.getItem('jwt');\r\n    if(token) config.headers.Authorization = `Bearer ${token}`\r\n    return config\r\n}, error=>{\r\n    return Promise.reject(error)\r\n})\r\n\r\n\r\naxios.interceptors.response.use(undefined, error =>{\r\n    if(error.response.status===404 && !flag){\r\n        history.push('/notfound')\r\n    }else if(error.response.status===401){\r\n        history.push('/unatherized')\r\n        flag=true;\r\n    }\r\n    console.log(error.response)\r\n    throw error.response\r\n    \r\n    \r\n    //console.log(error.response);\r\n})\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nconst sleep = (ms:number)=> (response: AxiosResponse) =>\r\n    new Promise<AxiosResponse>(resolve => setTimeout(()=> resolve(response),ms))\r\n\r\n\r\nconst requests = {\r\n    get:(url:string)=> axios.get(url).then(sleep(1000)).then(responseBody),\r\n    post:(url:string, body:{})=> axios.post(url,body).then(sleep(1000)).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(sleep(1000)).then(responseBody)\r\n}\r\n\r\nconst RisographForms ={ \r\n    list:(): Promise<IRisographForm[]>=> requests.get('/RisograghForms'),  //get all\r\n    listWithId:(id:string|null): Promise<IRisographForm[]>=> requests.get(`/RisograghForms?id=${id}`),  //get all\r\n    details:(id:number)=> requests.get(`/RisograghForms/${id}`),              //get one\r\n    create:(risographForm:IRisographForm)=> requests.post(`/RisograghForms/`,risographForm),      //post\r\n    update: (risographForm:IRisographForm) => requests.put(`/RisograghForms/${risographForm.risograghFormId}`, risographForm),\r\n    listInbox:(id:string|null): Promise<IRisographForm[]>=> requests.get(`/RisograghForms/inbox?id=${id}`)  //get all\r\n}\r\n\r\nconst VehicalReservationForms ={ \r\n    list:(): Promise<IVehicalReservationForm[]>=> requests.get('/VehicalReservationForms'),  //get all\r\n    listWithId:(id:string|null): Promise<IVehicalReservationForm[]>=> requests.get(`/VehicalReservationForms?id=${id}`),  //get all\r\n    details:(id:number)=> requests.get(`/VehicalReservationForms/${id}`),              //get one\r\n    create:(vehicalReservationForm:IVehicalReservationForm)=> requests.post(`/VehicalReservationForms/`,vehicalReservationForm),      //post\r\n    update: (vehicalReservationForm:IVehicalReservationForm) => requests.put(`/VehicalReservationForms/${vehicalReservationForm.vehicalReservationFormId}`, vehicalReservationForm),\r\n    listInbox:(id:string|null): Promise<IVehicalReservationForm[]>=> requests.get(`/VehicalReservationForms/inbox?id=${id}`)  //get all\r\n}\r\n\r\nconst User = {\r\n    current:(id:string|null): Promise<ICurrentUser| null> => requests.get(`/accounts/current?id=${id}`),\r\n    login:(user : IUserForm) : Promise<IUser> => requests.post('accounts/login', user),\r\n    register:(user : IUserForm) : Promise<IUser> => requests.post('accounts/register', user)\r\n}\r\n\r\nexport default {RisographForms, User,VehicalReservationForms }","import {observable ,action, makeObservable,  runInAction} from 'mobx';\r\nimport { history } from '../..';\r\nimport agent from '../api/agent';\r\nimport { IRisographForm } from '../models/risographForm';\r\nimport { RootStore } from './rootStore';\r\n\r\n\r\n\r\nexport default class RisographFormStore{\r\n\r\n    rootStore:RootStore;\r\n\r\n    constructor(rootStore: RootStore) {\r\n        // for new Mobx version\r\n        makeObservable(this);\r\n        this.rootStore = rootStore;\r\n      }\r\n     \r\n    \r\n    @observable.shallow risographForms:IRisographForm[] =[];\r\n    @observable inboxRisographForms:IRisographForm[] =[];\r\n    @observable loadingInitial = false;\r\n    @observable selectedRisographForm: IRisographForm| undefined\r\n    @observable submitting = false;\r\n    @observable isSubmitted = false;\r\n\r\n   \r\n\r\n    @action loadRisographForms= (id:string|null)=>{\r\n        this.loadingInitial=true;\r\n        agent.RisographForms.listWithId(id)\r\n        .then(risograhForms=>{\r\n            runInAction(()=>{\r\n                console.log(risograhForms)\r\n                risograhForms.forEach((risograhForm)=>{\r\n                    this.risographForms.push(risograhForm)\r\n                })\r\n            })\r\n        }).catch((err)=>{\r\n            throw err;\r\n        }).finally(()=>\r\n        runInAction(()=>{\r\n            this.loadingInitial=false\r\n        }));\r\n    }\r\n\r\n    \r\n\r\n    @action loadInboxRisographForms= (id:string|null)=>{\r\n        this.loadingInitial=true;\r\n        agent.RisographForms.listInbox(id)\r\n        .then(risograhForms=>{\r\n            runInAction(()=>{\r\n                console.log(risograhForms)\r\n                risograhForms.forEach((risograhForm)=>{\r\n                    this.inboxRisographForms.push(risograhForm)\r\n                })\r\n            })\r\n        }).finally(()=>\r\n        runInAction(()=>{\r\n            this.loadingInitial=false\r\n        }));\r\n    }\r\n\r\n\r\n    @action createRisographForm = (risographForm: IRisographForm)=>{\r\n        this.submitting =true;\r\n        agent.RisographForms.create(risographForm)\r\n        .then(()=>{\r\n            runInAction(()=>{\r\n                this.risographForms.push(risographForm)\r\n            })\r\n          }).then(()=>\r\n            runInAction(()=>{\r\n                this.submitting=false\r\n                \r\n            })).then(()=>{\r\n                this.rootStore.modalStore.openModal(\"Ok\")\r\n               // history.push('/dashboard')\r\n               \r\n            })\r\n          \r\n\r\n    }\r\n\r\n    @action editRisographForm = (risographForm: IRisographForm)=>{\r\n        this.submitting =true;\r\n        agent.RisographForms.update(risographForm)\r\n        .then(()=>{\r\n            runInAction(()=>{\r\n                this.risographForms.push(risographForm)\r\n            })\r\n          }).then(()=>\r\n            runInAction(()=>{\r\n                this.submitting=false\r\n                \r\n            })).then(()=>{\r\n                history.push('/dashboard')\r\n               // this.rootStore.modalStore.openModal('tets');\r\n            })\r\n          \r\n\r\n    }\r\n\r\n    // @action loadRisographform = (id: number)=>{\r\n    //     let risographForm = this.getRisographForm(id);\r\n    //     if(risographForm){\r\n    //         this.selectedRisographForm=risographForm;\r\n    //     }else{\r\n    //         this.loadingInitial =true;\r\n    //         agent.RisographForms.details(id)\r\n    //         .then((response)=>{\r\n    //             runInAction(()=>{\r\n    //                 this.selectedRisographForm = response;\r\n    //                 this.loadingInitial =false;\r\n    //             })\r\n    //         })\r\n         \r\n    //     }\r\n    // }\r\n\r\n    \r\n    @action loadRisographform = async (id: number)=>{\r\n        let risographForm = this.getRisographForm(id);\r\n        if(risographForm){\r\n            this.selectedRisographForm=risographForm;\r\n        }else{\r\n            this.loadingInitial =true;\r\n            try{\r\n                risographForm = await agent.RisographForms.details(id);\r\n                runInAction(()=>{\r\n                    this.selectedRisographForm = risographForm;\r\n                    this.loadingInitial =false;\r\n                })\r\n            } catch(error){\r\n                runInAction(()=>{\r\n                    this.loadingInitial= false;\r\n                })\r\n               console.log(error)\r\n            }\r\n           \r\n           \r\n         \r\n        }\r\n    }\r\n\r\n    getRisographForm = (id: number)=>{\r\n        return this.risographForms.find(a=> a.risograghFormId === id);\r\n    }\r\n\r\n    @action openCreateForm=()=>{\r\n        this.selectedRisographForm=undefined;\r\n    }\r\n\r\n    @action selectRisographForm = (id: number)=>{\r\n        this.selectedRisographForm = this.risographForms.find(a=> a.risograghFormId === id);\r\n    }\r\n\r\n    \r\n     @action cancelSelectedActivity = () => {\r\n        this.selectedRisographForm = undefined;\r\n    }\r\n\r\n   \r\n}\r\n\r\n","import {observable ,action, makeObservable,  runInAction} from 'mobx';\r\nimport { history } from '../..';\r\nimport agent from '../api/agent';\r\nimport { IRisographForm } from '../models/risographForm';\r\nimport { IVehicalReservationForm } from '../models/vehicalReservationForm';\r\nimport { RootStore } from './rootStore';\r\n\r\n\r\n\r\nexport default class VehicalReservationFormStore{\r\n\r\n    rootStore:RootStore;\r\n\r\n    constructor(rootStore: RootStore) {\r\n        // for new Mobx version\r\n        makeObservable(this);\r\n        this.rootStore = rootStore;\r\n      }\r\n     \r\n    \r\n    @observable.shallow vehicalReservationForms:IVehicalReservationForm[] =[];\r\n    @observable inboxVehicalReservationForms:IVehicalReservationForm[] =[];\r\n    @observable loadingInitial = false;\r\n    @observable selectedVehicalReservationForm: IVehicalReservationForm| undefined\r\n    @observable submitting = false;\r\n    @observable isSubmitted = false;\r\n\r\n    @action createVehicalReservationForm = (vehicalReservationForm: IVehicalReservationForm)=>{\r\n        this.submitting =true;\r\n        agent.VehicalReservationForms.create(vehicalReservationForm)\r\n        .then(()=>{\r\n            runInAction(()=>{\r\n                this.vehicalReservationForms.push(vehicalReservationForm)\r\n            })\r\n          }).then(()=>\r\n            runInAction(()=>{\r\n                this.submitting=false\r\n                \r\n            })).then(()=>{\r\n                this.rootStore.modalStore.openModal(\"Ok\")\r\n               // history.push('/dashboard')\r\n               \r\n            })\r\n          \r\n\r\n    }\r\n\r\n\r\n    @action loadVehicalReervationForms= (id:string|null)=>{\r\n        this.loadingInitial=true;\r\n        agent.VehicalReservationForms.listWithId(id)\r\n        .then(vehicalReservationForms=>{\r\n            runInAction(()=>{\r\n                console.log(vehicalReservationForms)\r\n                vehicalReservationForms.forEach((vehicalReservationForm)=>{\r\n                    this.vehicalReservationForms.push(vehicalReservationForm)\r\n                })\r\n            })\r\n        }).catch((err)=>{\r\n            throw err;\r\n        }).finally(()=>\r\n        runInAction(()=>{\r\n            this.loadingInitial=false\r\n        }));\r\n    }\r\n\r\n    \r\n\r\n    @action loadInboxehicalReservationForms= (id:string|null)=>{\r\n        this.loadingInitial=true;\r\n        agent.VehicalReservationForms.listInbox(id)\r\n        .then(vehicalReservationForms=>{\r\n            runInAction(()=>{\r\n                console.log(vehicalReservationForms)\r\n                vehicalReservationForms.forEach((vehicalReservationForm)=>{\r\n                    this.inboxVehicalReservationForms.push(vehicalReservationForm)\r\n                })\r\n            })\r\n        }).finally(()=>\r\n        runInAction(()=>{\r\n            this.loadingInitial=false\r\n        }));\r\n    }\r\n\r\n       \r\n    @action loadVehicalReservationform = async (id: number)=>{\r\n        let vehicalReservationForm = this.getVehicalReservationForm(id);\r\n        if(vehicalReservationForm){\r\n            this.selectedVehicalReservationForm=vehicalReservationForm;\r\n        }else{\r\n            this.loadingInitial =true;\r\n            try{\r\n                vehicalReservationForm = await agent.VehicalReservationForms.details(id);\r\n                runInAction(()=>{\r\n                    this.selectedVehicalReservationForm = vehicalReservationForm;\r\n                    this.loadingInitial =false;\r\n                })\r\n            } catch(error){\r\n                runInAction(()=>{\r\n                    this.loadingInitial= false;\r\n                })\r\n               console.log(error)\r\n            }\r\n        }\r\n    }\r\n\r\n    @action editVehicalReservationForm = (vehicalReservationForm: IVehicalReservationForm)=>{\r\n        this.submitting =true;\r\n        agent.VehicalReservationForms.update(vehicalReservationForm)\r\n        .then(()=>{\r\n            runInAction(()=>{\r\n                this.vehicalReservationForms.push(vehicalReservationForm)\r\n            })\r\n          }).then(()=>\r\n            runInAction(()=>{\r\n                this.submitting=false\r\n                \r\n            })).then(()=>{\r\n                history.push('/dashboard')\r\n               // this.rootStore.modalStore.openModal('tets');\r\n            })\r\n          \r\n\r\n    }\r\n    \r\n    \r\n    getVehicalReservationForm = (id: number)=>{\r\n        return this.vehicalReservationForms.find(a=> a.vehicalReservationFormId === id);\r\n    }\r\n\r\n    @action openCreateForm=()=>{\r\n        this.selectedVehicalReservationForm=undefined;\r\n    }\r\n\r\n    @action selectRisographForm = (id: number)=>{\r\n        this.selectedVehicalReservationForm = this.vehicalReservationForms.find(a=> a.vehicalReservationFormId === id);\r\n    }\r\n\r\n    \r\n     @action cancelSelectedActivity = () => {\r\n        this.selectedVehicalReservationForm = undefined;\r\n    }\r\n           \r\n         \r\n      \r\n\r\n\r\n    \r\n\r\n\r\n \r\n\r\n   \r\n          \r\n\r\n\r\n    \r\n    \r\n\r\n   \r\n}\r\n\r\n","import { action, computed, makeObservable, observable, runInAction } from \"mobx\";\r\nimport { act } from \"react-dom/test-utils\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { ICurrentUser, IUser, IUserForm } from \"../models/user\";\r\nimport { RootStore } from \"./rootStore\";\r\n\r\nexport default class UserStore{\r\n\r\n    rootStore:RootStore;\r\n\r\n    constructor(rootStore: RootStore) {\r\n        // for new Mobx version\r\n        makeObservable(this);\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    @observable user: IUser | null= null;\r\n    @observable currentUser: ICurrentUser | null= null;\r\n\r\n  \r\n\r\n\r\n    @computed get isLoggedIn() {return !!this.currentUser}\r\n\r\n    @action login = async(values : IUserForm)=>{\r\n        try {\r\n            const user = await agent.User.login(values);\r\n            runInAction(()=>{\r\n                this.user= user\r\n            })\r\n            //console.log(user)\r\n            this.rootStore.commonStore.setToken(user.token);\r\n            this.rootStore.commonStore.setUserId(user.userId);\r\n            this.rootStore.modalStore.closeModal();\r\n            history.push('/dashboard');\r\n           \r\n        } catch (error) {\r\n           throw error;\r\n        }\r\n    }\r\n\r\n    @action getUser = async (id:string|null)=>{\r\n        try {\r\n            const currUser = await agent.User.current(id);\r\n            runInAction(()=>{\r\n                this.currentUser =currUser;\r\n                console.log(currUser)\r\n            })\r\n          \r\n        } catch (error) {\r\n           // console.log(error)\r\n        }\r\n    }\r\n\r\n    @action logout=()=>{\r\n        this.rootStore.commonStore.setToken(null);\r\n        this.rootStore.commonStore.setUserId(null);\r\n        this.user =null;\r\n        this.currentUser = null;\r\n        history.push('/')\r\n        \r\n    }\r\n}","import { configure, makeObservable } from 'mobx';\r\nimport { createContext } from 'react';\r\nimport CommonStore from './commonStore';\r\nimport ModalStore from './modalStore';\r\nimport RisographFormStore from './risographFormStore'\r\nimport VehicalReservationFormStore from './vehicalReservationFormStore'\r\nimport UserStore from './userStore';\r\n\r\n\r\nconfigure({enforceActions: 'always'});\r\n\r\nexport class RootStore{\r\n\r\n    risographFormStore : RisographFormStore;\r\n    userStore: UserStore;\r\n    commonStore: CommonStore\r\n    modalStore: ModalStore\r\n    vehicalReservationFormStore:VehicalReservationFormStore\r\n\r\n    constructor(){\r\n\r\n      \r\n\r\n        this.risographFormStore=new RisographFormStore(this);\r\n        this.userStore = new UserStore(this);\r\n        this.commonStore =new CommonStore(this);\r\n        this.modalStore = new ModalStore(this);\r\n        this.vehicalReservationFormStore = new VehicalReservationFormStore(this)\r\n        \r\n        \r\n\r\n    }\r\n}\r\n\r\nexport const RootStoreContext = createContext(new RootStore());","import { observer } from 'mobx-react-lite'\r\nimport React, { useContext } from 'react'\r\nimport {  Link, NavLink } from 'react-router-dom'\r\nimport { Button, Container, Dropdown, Icon, Image, Menu, Popup } from 'semantic-ui-react'\r\nimport { RootStoreContext } from '../../app/stores/rootStore'\r\n\r\n\r\nconst NavBar: React.FC =() => {\r\n        const rootStore = useContext(RootStoreContext);\r\n        const{ user, logout, currentUser} = rootStore.userStore\r\n        \r\n    return (\r\n        <Menu fixed = 'top' inverted>\r\n\r\n        <Container fluid>\r\n        <Menu.Item header as ={NavLink} exact to ='/'>\r\n            {/* <img src =\"/assests/logo.png\" alt = 'logo' style={{marginRight : '20px'}}/> */}\r\n            Document Tracking System | University of Ruhuna\r\n        </Menu.Item>\r\n        \r\n        \r\n        <Menu.Item name='My Document' as ={NavLink} to ='/dashboard'\r\n        />\r\n        <Menu.Item>\r\n        <Popup content='Add a new Document' trigger={\r\n        <Button as ={NavLink} to ='/createDoc'  positive icon labelPosition='left'>\r\n            <Icon name='plus' />\r\n        Create New Document\r\n        </Button>} />\r\n            \r\n        </Menu.Item>\r\n            {currentUser  &&\r\n            <Menu.Item position='right'>\r\n            <Image avatar spaced='right' src={'/assests/user.png'} />\r\n            <Dropdown pointing='top right' text={currentUser?.firstName}>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item as={Link} to={`/profile/username`} text='My profile' icon='user'/>\r\n                <Dropdown.Item onClick={logout} text='Logout' icon='power' />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n            }\r\n        </Container>\r\n       \r\n      </Menu>\r\n    )\r\n}\r\n\r\nexport default observer(NavBar);\r\n","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Dimmer, Loader } from 'semantic-ui-react'\r\n\r\nconst LoadingComponent: React.FC<{inverted?:boolean, content?:string}> = ({inverted = true,content}) => {\r\n    return (\r\n        <Dimmer active inverted={inverted}>\r\n            <Loader content={content}/>\r\n        </Dimmer>\r\n    )\r\n}\r\n\r\nexport default observer(LoadingComponent)\r\n","\r\nimport React from 'react'\r\nimport { NavLink, useRouteMatch } from 'react-router-dom'\r\nimport { Input, Menu } from 'semantic-ui-react'\r\n\r\nexport const TopMenuBar = () => {\r\n\r\n  let {  url } = useRouteMatch();\r\n    return (\r\n        <div>\r\n        <Menu  pointing>\r\n          <Menu.Item\r\n            name='Home'\r\n            as ={NavLink} exact to={`${url}`}\r\n          />\r\n          <Menu.Item\r\n            name='Send Documents'\r\n            as ={NavLink} to={`${url}/forms`}\r\n          />\r\n          <Menu.Item\r\n            name='Inbox Documents'\r\n            as ={NavLink} to={`${url}/inbox`}\r\n          />\r\n          <Menu.Menu position='right'>\r\n            <Menu.Item>\r\n              <Input icon='search' placeholder='Search...' />\r\n            </Menu.Item>\r\n          </Menu.Menu>\r\n        </Menu>\r\n\r\n        \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default {TopMenuBar};\r\n","import { observer } from 'mobx-react-lite'\r\nimport React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Item, Label, Segment } from 'semantic-ui-react'\r\nimport { RootStoreContext } from '../../../app/stores/rootStore'\r\n\r\n\r\n\r\nconst RisographFormList:React.FC = () => {\r\n\r\n    const rootStore = useContext(RootStoreContext)\r\n    const{risographForms} = rootStore.risographFormStore;\r\n\r\n    return (\r\n        <Segment clearing   >\r\n        <Item.Group divided>\r\n            {risographForms.map(risographForm =>(\r\n                <Item key ={risographForm.risograghFormId}>\r\n                <Item.Content>\r\n                <Item.Header as='a'>{risographForm.documentTitle}</Item.Header>\r\n                <Item.Meta>sumbitted at {risographForm.initDateTime}</Item.Meta>\r\n                <Item.Description>\r\n                    <div >\r\n                        This is a request for a risograph copies for the {risographForm.purpose} purposes.<br/> Due date is  {risographForm.dueDateTime}\r\n                        </div>\r\n                </Item.Description>\r\n                <Item.Extra>\r\n                    <Button as = {Link}  to={`/risographForms/${risographForm.risograghFormId}`} floated='right' content='View Application' color='blue'></Button>\r\n                    <Label  style={{background:'LightGreen'}} basic content='Risograph Copies Request'/>\r\n                    <Label  style={{background:'LightGreen'}} basic content={risographForm.formStatus} />\r\n                </Item.Extra>\r\n                </Item.Content>\r\n                </Item>\r\n            ))}\r\n    \r\n      </Item.Group>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nexport default observer(RisographFormList);","import { observer } from 'mobx-react-lite'\r\nimport React, { useContext, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Item, Label, Segment } from 'semantic-ui-react'\r\nimport { RootStoreContext } from '../../../app/stores/rootStore'\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent'\r\n\r\n\r\nconst VehicalReservationFormList:React.FC = () => {\r\n\r\n    const rootStore = useContext(RootStoreContext)\r\n    const{vehicalReservationForms} = rootStore.vehicalReservationFormStore;\r\n\r\n   \r\n\r\n    \r\n\r\n\r\n    return (\r\n        <Segment clearing   >\r\n        <Item.Group divided>\r\n            {vehicalReservationForms.map(vehicalReservationForm =>(\r\n                <Item key ={vehicalReservationForm.vehicalReservationFormId}>\r\n                <Item.Content>\r\n                <Item.Header as='a'>Vehical Reservation for {vehicalReservationForm.applicant}</Item.Header>\r\n                <Item.Meta>sumbitted at {vehicalReservationForm.initDateTime}</Item.Meta>\r\n                <Item.Description>\r\n                    <div >\r\n                        This is a request for a risograph copies for the {vehicalReservationForm.purpose} purposes.<br/> Due date is  {vehicalReservationForm.dueDateTime}\r\n                        </div>\r\n                </Item.Description>\r\n                <Item.Extra>\r\n                    <Button as = {Link}  to={`/vehicalReservationForms/${vehicalReservationForm.vehicalReservationFormId}`} floated='right' content='View Application' color='blue'></Button>\r\n                    <Label  style={{background:'LightGreen'}} basic content='Risograph Copies Request'/>\r\n                    <Label  style={{background:'LightGreen'}} basic content={vehicalReservationForm.formStatus} />\r\n                </Item.Extra>\r\n                </Item.Content>\r\n                </Item>\r\n            ))}\r\n    \r\n      </Item.Group>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nexport default observer(VehicalReservationFormList);","\r\nimport {  Link, NavLink, Route, Switch, useRouteMatch } from 'react-router-dom'\r\nimport { Card, Grid, Icon, Image, Menu, Segment } from 'semantic-ui-react'\r\nimport { history } from '../..';\r\nimport RisographFormList from '../../features/risographForms/dashboard/RisographFormList';\r\nimport VehicalReservationFormList from '../../features/vehicalReservationForm/dashboard/VehicalReservationFormList'\r\n\r\n const SideMenu = () => {\r\n    let { path, url } = useRouteMatch();\r\n\r\n    const createRisograph= ()=>{\r\n      history.push('/createDoc/risographForm')\r\n    }\r\n\r\n    return (\r\n        <Grid >\r\n        <Grid.Column width={3}  style={{background: '#182A73', height: '70em' }}>\r\n          <Menu inverted fluid vertical   style={{marginTop:'3em',  background: '#182A73'}}> \r\n            \r\n            <Menu.Item\r\n              name='Application for Vehical Reservation'\r\n              color='blue'\r\n              as ={NavLink} exact to={`${url}`}\r\n            />\r\n            <Menu.Item\r\n              name='Request for Risograph Copies'\r\n              color='blue'\r\n              as ={NavLink} exact to={`${url}/risographForms`}\r\n              \r\n            />\r\n            <Menu.Item\r\n              name='Voucher Application'\r\n              color='blue'\r\n              as ={NavLink} exact to={`${url}/voucher`}\r\n            />\r\n            <Menu.Item\r\n              name='Bank Application'\r\n              color='blue'\r\n              as ={NavLink} exact to={`${url}/bankApplication`}\r\n            />\r\n          </Menu>\r\n        </Grid.Column>\r\n\r\n        <Grid.Column stretched width={10}>\r\n          \r\n          <Switch>\r\n                <Route exact path={path}>\r\n                <VehicalReservationFormList/>\r\n               \r\n                </Route>\r\n                <Route path={`${path}/risographForms`}>\r\n                <RisographFormList/>\r\n                </Route>\r\n                <Route path={`${path}/voucher`}>\r\n                <h3>No Voucher Application</h3>\r\n                </Route>\r\n                <Route path={`${path}/bankApplication`}>\r\n                <h3>No Bank Applications</h3>\r\n                </Route>\r\n        </Switch>\r\n         \r\n        </Grid.Column>\r\n\r\n        <Grid.Column  width={3}>\r\n        <Card fluid\r\n        image='/assests/newDoc.png'\r\n        header='Create new Document'\r\n        meta='Download Now'\r\n        description='Download Request Risograph Copies Appllication template and eidt with your details'\r\n        onClick = {createRisograph}\r\n        />\r\n\r\n      <Card fluid>\r\n          <Card.Content header='Do you know ?' />\r\n          <Card.Content >\r\n          Risograph Form documentation process flow\r\n          </Card.Content>\r\n          <Card.Content >\r\n          <Image src='/assests/riso_flow.png' />\r\n          </Card.Content>\r\n        </Card>\r\n        </Grid.Column>\r\n      </Grid>\r\n    )\r\n}\r\n\r\nexport default SideMenu\r\n","import { observer } from 'mobx-react-lite'\r\nimport React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Divider, Item, Label, Segment } from 'semantic-ui-react'\r\nimport { RootStoreContext } from '../../../app/stores/rootStore'\r\n\r\n\r\n\r\nconst RisographFormList:React.FC = () => {\r\n\r\n    const rootStore = useContext(RootStoreContext)\r\n    const{inboxRisographForms} = rootStore.risographFormStore;\r\n\r\n    return (\r\n        <Segment clearing  >\r\n        <Item.Group divided>\r\n            {inboxRisographForms.map(risographForm =>(\r\n                <Item key ={risographForm.risograghFormId}>\r\n                <Item.Content>\r\n                <Item.Header as='a'>New Application - Approval pending application by Mr.{risographForm.teacherName}</Item.Header>\r\n                <Item.Meta>Title of the Document: {risographForm.documentTitle}</Item.Meta>\r\n                <Item.Description>\r\n                    <div >\r\n                        This is a request for a risograph copies for the {risographForm.purpose} purposes.<br/>Application due date is <b>{risographForm.dueDateTime}</b> \r\n                        </div>\r\n                </Item.Description>\r\n                <Item.Extra>\r\n                    \r\n                    <Label style={{background:'NavajoWhite'}} basic content='Inbox | Risograph Copies Request'/>\r\n                    <Label  style={{background:'LightGreen'}} basic content={risographForm.formStatus} />\r\n                </Item.Extra>\r\n               \r\n                <Button fluid as = {Link} to={`/risographForms/manage/${risographForm.risograghFormId}`}  content='Review Application' color='orange'></Button>\r\n                </Item.Content>\r\n                </Item>\r\n            ))}\r\n    \r\n      </Item.Group>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nexport default observer(RisographFormList);","import { observer } from 'mobx-react-lite'\r\nimport React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Divider, Item, Label, Segment } from 'semantic-ui-react'\r\nimport { RootStoreContext } from '../../../app/stores/rootStore'\r\n\r\n\r\n\r\nconst InboxVehicalFormList:React.FC = () => {\r\n\r\n    const rootStore = useContext(RootStoreContext)\r\n    const{inboxVehicalReservationForms} = rootStore.vehicalReservationFormStore;\r\n\r\n    return (\r\n        <Segment clearing  >\r\n        <Item.Group divided>\r\n            {inboxVehicalReservationForms.map(vehicalForm =>(\r\n                <Item key ={vehicalForm.vehicalReservationFormId}>\r\n                <Item.Content>\r\n                <Item.Header as='a'>New Application - Approval pending application by Mr.{vehicalForm.applicant}</Item.Header>\r\n                <Item.Meta>Department: {vehicalForm.department}</Item.Meta>\r\n                <Item.Description>\r\n                    <div >\r\n                        This is a request a vehical for {vehicalForm.purpose} purposes.<br/>Application due date is <b>{vehicalForm.dueDateTime}</b> \r\n                        </div>\r\n                </Item.Description>\r\n                <Item.Extra>\r\n                    \r\n                    <Label style={{background:'NavajoWhite'}} basic content='Inbox | Vehical Reservation'/>\r\n                    <Label  style={{background:'LightGreen'}} basic content={vehicalForm.formStatus} />\r\n                </Item.Extra>\r\n               \r\n                <Button fluid as = {Link} to={`/vehicalReservationForm/manage/${vehicalForm.vehicalReservationFormId}`}  content='Review Application' color='orange'></Button>\r\n                </Item.Content>\r\n                </Item>\r\n            ))}\r\n    \r\n      </Item.Group>\r\n        </Segment>\r\n    )\r\n}\r\n\r\nexport default observer(InboxVehicalFormList);","import React from 'react'\r\nimport {  NavLink, Route, Switch, useRouteMatch } from 'react-router-dom'\r\nimport { Card, Grid, Image, Menu } from 'semantic-ui-react'\r\nimport InboxRisographFormList from '../../features/risographForms/dashboard/InboxRisographFormList';\r\nimport InboxVehicalFormList from  '../../features/vehicalReservationForm/dashboard/InboxVehicalFormList';\r\n\r\n const InboxSideMenu = () => {\r\n    let { path, url } = useRouteMatch();\r\n\r\n    return (\r\n        <Grid >\r\n        <Grid.Column  width={3} style={{background: '#182A73', height: '70em' }}>\r\n          <Menu inverted fluid vertical   style={{marginTop:'3em',  background: '#182A73'}} >\r\n            \r\n            <Menu.Item\r\n              name='Application for Vehical Reservation'\r\n              color='blue'\r\n              as ={NavLink} exact to={`${url}`}\r\n            />\r\n\r\n            <Menu.Item\r\n              name='Request for Risograph Copies'\r\n              color='blue'\r\n              as ={NavLink} exact to={`${url}/risographForm`}\r\n              \r\n            />\r\n            <Menu.Item\r\n              name='Voucher Application'\r\n              color='blue'\r\n              as ={NavLink} exact to={`${url}/voucher`}\r\n            />\r\n            <Menu.Item\r\n              name='Bank Application'\r\n              color='blue'\r\n              as ={NavLink} exact to={`${url}/bankApplication`}\r\n            />\r\n          </Menu>\r\n        </Grid.Column>\r\n\r\n        <Grid.Column stretched width={10}>\r\n          \r\n          <Switch>\r\n                <Route exact path={path}>\r\n                <InboxVehicalFormList/>\r\n                </Route>\r\n                <Route path={`${path}/risographForm`}>\r\n                <InboxRisographFormList/>\r\n                </Route>\r\n                <Route path={`${path}/voucher`}>\r\n                <h3>No Inbox Voucher Application</h3>\r\n                </Route>\r\n                <Route path={`${path}/bankApplication`}>\r\n                <h3>No Inbox Bank Applications</h3>\r\n                </Route>\r\n        </Switch>\r\n         \r\n        </Grid.Column>\r\n\r\n        <Grid.Column  width={3}>\r\n      \r\n\r\n      <Card fluid>\r\n          <Card.Content header='Do you know ?' />\r\n          <Card.Content >\r\n          Risograph Form documentation process flow\r\n          </Card.Content>\r\n          <Card.Content >\r\n          <Image src='/assests/riso_flow.png' />\r\n          </Card.Content>\r\n        </Card>\r\n        </Grid.Column>\r\n      </Grid>\r\n    )\r\n}\r\n\r\nexport default InboxSideMenu\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card, Container, Grid, Header, HeaderContent, Icon, Image, Label, List } from 'semantic-ui-react'\r\nimport { history } from '../..';\r\nimport { RootStoreContext } from '../stores/rootStore';\r\n\r\n const Home = () => {\r\n\r\n    const rootStore = useContext(RootStoreContext);\r\n    const{ currentUser,getUser} = rootStore.userStore\r\n    \r\n    const{risographForms, inboxRisographForms}= rootStore.risographFormStore\r\n\r\n    const{vehicalReservationForms, inboxVehicalReservationForms}= rootStore.vehicalReservationFormStore\r\n\r\n    const userId = window.localStorage.getItem('userId');\r\n\r\n    useEffect(()=>{\r\n       \r\n\r\n        if(userId){\r\n            getUser(userId);\r\n          }\r\n\r\n    },[getUser]);\r\n\r\n    var approvedNum =0;\r\n    var pendingNum =0;\r\n    var rejectionNum =0;\r\n    var canceledNum =0;\r\n    const openSendDoc=()=>{\r\n        history.push('/dashboard/forms')\r\n    }\r\n\r\n    const openInbox=()=>{\r\n        history.push('/dashboard/inbox')\r\n    }\r\n    risographForms.forEach((form)=>{\r\n       if(form.formStatus === 'Approved'){\r\n            approvedNum++;\r\n       }\r\n       if(form.formStatus === 'Pending'){\r\n        pendingNum++;\r\n        }\r\n        if(form.formStatus === 'Rejected'){\r\n            rejectionNum++;\r\n        }\r\n        if(form.formStatus === 'Canceled'){\r\n            canceledNum++;\r\n        }\r\n       \r\n    })\r\n\r\n    vehicalReservationForms.forEach((form)=>{\r\n        if(form.formStatus === 'Approved'){\r\n             approvedNum++;\r\n        }\r\n        if(form.formStatus === 'Pending'){\r\n         pendingNum++;\r\n         }\r\n         if(form.formStatus === 'Rejected'){\r\n             rejectionNum++;\r\n         }\r\n         if(form.formStatus === 'Canceled'){\r\n             canceledNum++;\r\n         }\r\n        \r\n     })\r\n    return (\r\n        <Container fluid>\r\n            <Grid>\r\n                <Grid.Column width={4}  style={{background: '#182A73', height: '70em' }}>\r\n                <Header size='huge' inverted  style={{margin:'1em'}}>\r\n                    Document Tracking System\r\n                    <Header.Subheader>\r\n                   Faculty of Engineering | University of Ruhuna\r\n                    </Header.Subheader>\r\n                </Header>\r\n                <Header inverted as='h2' style={{margin:'1em'}}>\r\n                    <Icon name='download' />\r\n                    <Header.Content>\r\n                   Start Here\r\n                    <Header.Subheader>Download a new application template here</Header.Subheader>\r\n                    </Header.Content>\r\n                </Header>\r\n\r\n                <Button size='large' inverted  as ={Link} to={'/createDoc'}  style={{marginLeft:'3em'}}>\r\n                    New Document\r\n                </Button>\r\n                <Image size='small'centered src='/assests/document.png' style={{marginTop:'2em'}}/>\r\n                <Header  inverted  style={{margin:'2em'}}>\r\n                  Application Templates\r\n                    <Header.Subheader>\r\n                   <List>\r\n                   <List.Item icon='file' content='Requesting Risograph Forms' />\r\n                    <List.Item icon='file' content='Vehical Revervation Form' />\r\n                    <List.Item icon='file' content='Bank Application' />\r\n                    <List.Item icon='file' content='Voucher Application' />\r\n                   </List>\r\n                    </Header.Subheader>\r\n                </Header>\r\n                </Grid.Column>\r\n\r\n\r\n                <Grid.Column width={8} >\r\n                    <Label  size='huge'>Personal Dashboard</Label>\r\n                <Card.Group itemsPerRow={4}>\r\n                <Card  color = 'blue'  onClick = {openSendDoc}>\r\n                    <Image src='/assests/dashboard_send.png'  />\r\n                    <Card.Content>\r\n                    <Card.Header>Send</Card.Header>\r\n                    <Card.Meta>\r\n                        <span className='date'>Send Documents</span>\r\n                    </Card.Meta>\r\n                    <Card.Description>\r\n                    <Card.Header as = 'h1'>\r\n                    <Icon name='file alternate outline' />\r\n                        {risographForms.length+ vehicalReservationForms.length}</Card.Header>\r\n                    </Card.Description>\r\n                    </Card.Content>\r\n                  \r\n                </Card>\r\n\r\n                <Card color = 'green' onClick = {openSendDoc}>\r\n                    <Image src='/assests/dashboard_approved.png' />\r\n                    <Card.Content>\r\n                    <Card.Header>Approved</Card.Header>\r\n                    <Card.Meta>\r\n                        <span className='date'>Approved Documents</span>\r\n                    </Card.Meta>\r\n                    <Card.Description>\r\n                    <Card.Header as = 'h1'>\r\n                    <Icon name='file alternate outline' />\r\n                    {approvedNum}</Card.Header>\r\n                    </Card.Description>\r\n                    </Card.Content>\r\n                  \r\n                </Card>\r\n\r\n                <Card  color = 'yellow' onClick = {openSendDoc}>\r\n                    <Image src='/assests/dashboard_pending.png' />\r\n                    <Card.Content>\r\n                    <Card.Header>For Approval</Card.Header>\r\n                    <Card.Meta>\r\n                        <span className='date'>Approval Pending Documents</span>\r\n                    </Card.Meta>\r\n                    <Card.Description>\r\n                    <Card.Header as = 'h1'>\r\n                    <Icon name='file alternate outline' />\r\n                    {pendingNum}</Card.Header>\r\n                    </Card.Description>\r\n                    </Card.Content>\r\n                  \r\n                </Card>\r\n                <Card  color = 'blue' onClick = {openInbox}>\r\n                    <Image src='/assests/dashboard_inbox.png'  />\r\n                    <Card.Content>\r\n                    <Card.Header>Inbox</Card.Header>\r\n                    <Card.Meta>\r\n                    <span className='date'>Recived Document</span>\r\n                    </Card.Meta>\r\n                    <Card.Description>\r\n                    <Card.Header as = 'h1'>\r\n                    <Icon name='file alternate outline' />\r\n                    {inboxRisographForms.length+ inboxVehicalReservationForms.length}</Card.Header>\r\n                    </Card.Description>\r\n                    </Card.Content>\r\n                  \r\n                </Card>\r\n                <Card  color = 'blue' onClick = {openSendDoc}>\r\n                    <Image src='/assests/dashboard_complete.png' />\r\n                    <Card.Content>\r\n                    <Card.Header>Completed</Card.Header>\r\n                    <Card.Meta>\r\n                        <span className='date'>Completed Documents</span>\r\n                    </Card.Meta>\r\n                    <Card.Description>\r\n                    <Card.Header as = 'h1'>\r\n                    <Icon name='file alternate outline' />\r\n                        0</Card.Header>\r\n                    </Card.Description>\r\n                    </Card.Content>\r\n                  \r\n                </Card>\r\n               \r\n                <Card  color = 'red' onClick = {openSendDoc}>\r\n                    <Image src='/assests/dashboard_rejected.png' />\r\n                    <Card.Content>\r\n                    <Card.Header>Rejected</Card.Header>\r\n                    <Card.Meta>\r\n                        <span className='date'>Rejected Documents</span>\r\n                    </Card.Meta>\r\n                    <Card.Description>\r\n                    <Card.Header as = 'h1'>\r\n                    <Icon name='file alternate outline' />\r\n                    {rejectionNum}</Card.Header>\r\n                    </Card.Description>\r\n                    </Card.Content>\r\n                  \r\n                </Card>\r\n\r\n                <Card  color = 'red' onClick = {openSendDoc}>\r\n                    <Image src='/assests/dashboard_pending.png' />\r\n                    <Card.Content>\r\n                    <Card.Header>Canceled</Card.Header>\r\n                    <Card.Meta>\r\n                        <span className='date'>Canceled Documents</span>\r\n                    </Card.Meta>\r\n                    <Card.Description>\r\n                    <Card.Header as = 'h1'>\r\n                    <Icon name='file alternate outline' />\r\n                    {canceledNum}</Card.Header>\r\n                    </Card.Description>\r\n                    </Card.Content>\r\n                  \r\n                </Card>\r\n                <Card  color = 'purple' >\r\n                    <Image src='/assests/dashboard_expired.png'  />\r\n                    <Card.Content>\r\n                    <Card.Header>Expired</Card.Header>\r\n                    <Card.Meta>\r\n                        <span className='date'>Expired Documents</span>\r\n                    </Card.Meta>\r\n                    <Card.Description>\r\n                    <Card.Header as = 'h1'>\r\n                    <Icon name='file alternate outline' />\r\n                        0</Card.Header>\r\n                    </Card.Description>\r\n                    </Card.Content>\r\n                  \r\n                </Card>\r\n                </Card.Group>\r\n                </Grid.Column>\r\n\r\n\r\n\r\n                <Grid.Column width={4}>\r\n                <Card>\r\n                    <Card.Content>\r\n                    <Card.Header>Your Information</Card.Header>\r\n                    <Image src='/assests/user.png'  />\r\n                    \r\n                    <Card.Description>\r\n                       Mr. {currentUser?.firstName}  {currentUser?.lastName}<br/>\r\n                       {currentUser?.designation} <br/>\r\n                       {currentUser?.department} <br/>\r\n                        Faculty of Engineering<br/>\r\n                        University of Ruhuna<br/>\r\n                    </Card.Description>\r\n                    </Card.Content>\r\n                    <Card.Content extra>\r\n                    <a>\r\n                        <Icon name='user' />\r\n                        Logged in user\r\n                    </a>\r\n                    </Card.Content>\r\n                </Card>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import { observer } from 'mobx-react-lite'\r\nimport React, {  useContext, useEffect } from 'react'\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent'\r\nimport { TopMenuBar } from '../../../app/layout/TopMenuBar'\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom'\r\nimport  SideMenu  from '../../../app/layout/SideMenu'\r\nimport InboxSideMenu from '../../../app/layout/InboxSildeMenu'\r\nimport { Container } from 'semantic-ui-react'\r\nimport { RootStoreContext } from '../../../app/stores/rootStore'\r\nimport Home from '../../../app/layout/Home' \r\n\r\n\r\n\r\n const RisographDashboard:React.FC = () => {\r\n\r\n    const rootStore = useContext(RootStoreContext)\r\n\r\n    const {setAppLoaded, userId, appLoaded}= rootStore.commonStore;\r\n    const {getUser} = rootStore.userStore\r\n\r\n    const { path } = useRouteMatch();\r\n\r\n    useEffect(()=>{\r\n        rootStore.risographFormStore.risographForms  =[]\r\n        rootStore.risographFormStore.inboxRisographForms  =[]\r\n\r\n        rootStore.vehicalReservationFormStore.vehicalReservationForms  =[]\r\n        rootStore.vehicalReservationFormStore.inboxVehicalReservationForms  =[]\r\n\r\n        rootStore.risographFormStore.loadRisographForms(window.localStorage.getItem('userId'));\r\n        rootStore.risographFormStore.loadInboxRisographForms(window.localStorage.getItem('userId'));\r\n\r\n        rootStore.vehicalReservationFormStore.loadVehicalReervationForms(window.localStorage.getItem('userId'));\r\n        rootStore.vehicalReservationFormStore.loadInboxehicalReservationForms(window.localStorage.getItem('userId'));\r\n\r\n        if(userId){\r\n            getUser(userId);\r\n          }\r\n\r\n    },[rootStore.risographFormStore,rootStore.vehicalReservationFormStore,getUser,  userId]);\r\n  \r\n    if(rootStore.risographFormStore.loadingInitial) return <LoadingComponent content='Loading Applications...'/>\r\n    if(rootStore.vehicalReservationFormStore.loadingInitial) return <LoadingComponent content='Loading Applications...'/>\r\n\r\n    \r\n   \r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <TopMenuBar/>\r\n\r\n            <Container fluid style={{marginTop:'1em'} }>\r\n            <Switch >\r\n                <Route exact path={path}>\r\n                    <Home/>\r\n                </Route>\r\n                <Route path={`${path}/forms`}>\r\n                    <SideMenu  />\r\n                </Route>\r\n                <Route path={`${path}/inbox`}>\r\n                   <InboxSideMenu  />\r\n                </Route>\r\n                </Switch>\r\n            </Container>\r\n            \r\n            \r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default observer(RisographDashboard);\r\n","\r\nimport React from 'react';\r\nimport { FieldRenderProps } from 'react-final-form';\r\nimport { FormFieldProps, Form, Label } from 'semantic-ui-react';\r\n\r\ninterface IProps extends FieldRenderProps<string, HTMLInputElement>,FormFieldProps {}\r\n\r\nconst TextInput: React.FC<IProps> = ({\r\n  input,\r\n  width,\r\n  type,\r\n  label,\r\n  placeholder,\r\n  meta: { touched, error }\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error} type={type} width={width}>\r\n      <input {...input} placeholder={placeholder} />\r\n      {touched && error && (\r\n        <Label basic color='red'>\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default TextInput;","import { FORM_ERROR } from 'final-form'\r\nimport  { useContext } from 'react'\r\nimport {Form as FinalForm, Field} from 'react-final-form'\r\nimport { Button, Container, Form, Grid, Header, Icon, Image, Label, Segment } from 'semantic-ui-react'\r\nimport TextInput from '../../app/common/Form/TextInput'\r\nimport { IUserForm } from '../../app/models/user'\r\nimport { RootStoreContext } from '../../app/stores/rootStore'\r\n\r\n\r\n\r\n\r\nconst LoginForm = () => {\r\n\r\n    const rootStore = useContext(RootStoreContext)\r\n    const {login} = rootStore.userStore\r\n    return (\r\n\r\n\r\n            <Segment  textAlign='center' vertical style={{marginTop:'2em', marginBotton:'2em'}} >\r\n                    <Grid verticalAlign='middle' divided padded>\r\n                        <Grid.Column width={8} >\r\n                        <Container fluid text>\r\n                                <Header as='h1' size='huge' textAlign='center'>\r\n                                <Image src='/assests/logo.jpg'  />\r\n                                    <Header.Content>\r\n                                    Document Tracking System\r\n                                    <Header.Subheader>Faculty of Engineering | University of Ruhana</Header.Subheader>\r\n                                    </Header.Content>\r\n                                </Header> \r\n                                \r\n                                <br/>\r\n                                <br/>\r\n                            <FinalForm  onSubmit = {(values:IUserForm)=> login(values).catch(err=>({\r\n                                    [FORM_ERROR]:err\r\n                                }))}\r\n                                    render ={({handleSubmit , submitting, form, submitError})=>(\r\n                                    <Form onSubmit={handleSubmit}   >\r\n                                        <Header as='h4'  textAlign='left'>Email</Header>\r\n                                        <Field        \r\n                                        name= 'email'\r\n                \r\n                                        render = {TextInput}\r\n                                        placeholder='name@test.com'\r\n                                        \r\n                                        />\r\n                                       <Header as='h4'  textAlign='left'>Password</Header>\r\n                                        <Field \r\n                                        name= 'password'\r\n                                      \r\n                                        render = {TextInput}\r\n                                        type = 'password'\r\n                                        placeholder='Enter Password here'\r\n                                        />\r\n                                        {submitError && <Label color= 'red'basic   content = {(submitError.status===400 || submitError.status===401 )&& 'Invaild username or password'} />}\r\n                                        <br/>\r\n                                        <br/>\r\n                                        <Button  size='huge'  loading={submitting} color='blue' content='Login' />\r\n                                    \r\n                                    </Form>\r\n                                    )}\r\n                                    />\r\n                                \r\n                            </Container>\r\n                \r\n                        </Grid.Column>\r\n                        <Grid.Column  width={8}>\r\n                        <Image src='/assests/login.jpg' fluid />\r\n                        </Grid.Column>\r\n                    </Grid>\r\n                \r\n                        \r\n               \r\n                 \r\n        </Segment>\r\n\r\n               \r\n\r\n        \r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import React, { Fragment, useContext } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Header, Segment ,Image, Button, Icon} from 'semantic-ui-react';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport LoginForm from '../user/LoginForm';\r\n\r\nconst HomePage = () => {\r\n\r\n    const rootStore = useContext(RootStoreContext);\r\n    const {isLoggedIn,user,currentUser} = rootStore.userStore\r\n    const {openModal} = rootStore.modalStore;\r\n    return (\r\n        <Segment inverted  vertical className='masthead' >\r\n        <Container  style={{marginLeft: '5em'}} >\r\n            <Segment.Inline>\r\n            <Image size='small' src='/assests/logo.png' alt='logo' />\r\n            <Header as='h1'  inverted>\r\n                Document Tracking System\r\n                <Header.Subheader>\r\n                    Offical documents and request traking system of Faculty of Engineering, University of Ruhuna\r\n                </Header.Subheader>\r\n            </Header>\r\n            </Segment.Inline>\r\n            \r\n            <Header as='h2' inverted content='Faculty of Engineering | University of Ruhuna' />\r\n            {isLoggedIn && currentUser ? (\r\n                <Fragment>\r\n                    <Header as='h2' inverted content= {`Welcome back ${currentUser.firstName}`} />\r\n                    <Button as={Link}  to='/dashboard' size='huge' inverted>\r\n                        Go to dashboard\r\n                    </Button>\r\n                </Fragment>\r\n            ): (\r\n                <Fragment>\r\n                    \r\n                        <Button onClick={()=> openModal(<LoginForm/>)} size='huge' inverted>\r\n                        Login\r\n                        </Button>\r\n                </Fragment>\r\n            )}\r\n            \r\n        </Container>\r\n    </Segment>\r\n    )\r\n}\r\n\r\nexport default HomePage;\r\n","\r\nimport React, { useContext } from 'react';\r\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react';\r\nimport { RootStoreContext } from '../stores/rootStore';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { history } from '../..';\r\n\r\nconst FormSuccessModal = () => {\r\n    const rootStore = useContext(RootStoreContext);\r\n    const {modal: {open}, closeModal} = rootStore.modalStore;\r\n\r\n    const gotoDashboard = ()=>{\r\n        closeModal();\r\n        history.push('/dashboard/forms')\r\n    }\r\n\r\n  return (\r\n    <Modal  open={open} onClose={closeModal} size='large'>\r\n      <Header icon>\r\n        <Icon name='archive' />\r\n        Submission Successfull!\r\n      </Header>\r\n      <Modal.Content>\r\n        <p>\r\n        Your Application is sucessfully sumbittied to the documentation flow\r\n         <br/> See your application in dashboard\r\n        </p>\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n       \r\n        <Button color='green' inverted onClick={gotoDashboard}>\r\n          <Icon name='checkmark' /> Go to dashboard\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default observer(FormSuccessModal);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { FormEvent, useContext, useEffect, useState } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Card, Container, Divider, Form, Header, Icon, Label, Segment, Step, TextArea } from 'semantic-ui-react'\r\nimport { IRisographForm } from '../../../app/models/risographForm'\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\nimport FormSuccessModal from '../../../app/layout/FormSuccessModal'\r\n\r\n\r\n\r\n\r\n\r\nconst RisographForm: React.FC<RouteComponentProps> = ({history}) => {\r\n\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {createRisographForm ,submitting} = rootStore.risographFormStore;\r\n\r\n  \r\n  const {setAppLoaded, userId}= rootStore.commonStore;\r\n  const {getUser} = rootStore.userStore\r\n  useEffect(()=>{\r\n    if(userId){\r\n      getUser(userId);\r\n    }\r\n  }, [getUser, setAppLoaded, userId])\r\n\r\n  \r\n  const{  currentUser} = rootStore.userStore\r\n\r\n    const initializeForm = () => {\r\n          return {\r\n            //risograghFormId: 0,\r\n            documentTitle: '',\r\n            teacherName: '',\r\n            numberOfPage: 0,\r\n            numberOfCopies: 0,\r\n            sizeOfCopies: '',\r\n            purpose: '',\r\n            paperProvided: '',\r\n            copyTo: '',\r\n            dueDateTime: '',\r\n            finalLevelUser: '',\r\n            formStatus: 'Pending',\r\n            //finalUserDateTime: '',\r\n            //formModelId:0,\r\n            formModelName:'Request for Risograph',\r\n            userId:'',\r\n            initDateTime: '' // this need to be current date time\r\n           \r\n          };\r\n        \r\n      };\r\n\r\n    const [risographForm, setRisographForm] = useState<IRisographForm>(initializeForm);\r\n\r\n    const handleSubmit = () => {\r\n        let newRisographForm={\r\n            ...risographForm, \r\n            initDateTime: '2021-03-24T16:49',\r\n            teacherName: currentUser!.firstName,\r\n            userId: window.localStorage.getItem('userId'),  //getting current user\r\n            finalLevelUser:'8dfaae4b-83a8-41cb-b69b-f7e04e236151'  // coonst hoD -> retrive relevent HoDs id\r\n        };\r\n        createRisographForm(newRisographForm)\r\n   \r\n        \r\n      };\r\n\r\n    \r\n\r\n      const handleInputChange = (\r\n        event: FormEvent<HTMLInputElement | HTMLTextAreaElement>\r\n      ) => {\r\n        const { name, value } = event.currentTarget;\r\n        if(name === 'numberOfPage' || name === 'numberOfCopies'){\r\n          setRisographForm({...risographForm,[name]: parseInt(value)})\r\n        }else{\r\n          setRisographForm({...risographForm,[name]: value})\r\n        }\r\n        \r\n      };\r\n\r\n    return (\r\n      <Container  style={{marginTop:'7em'}}>\r\n           <FormSuccessModal/>\r\n          <Segment clearing>\r\n          <Header textAlign ='center' size ='small' >Department of Electrical and Infromation  <br/> Engineering Faculty of Engineering - University of Ruhuna</Header>\r\n          <Header as ='h1' dividing textAlign ='center'>Request for Risograph Copies</Header>\r\n          \r\n        \r\n            <Form onSubmit = {handleSubmit}>\r\n            <Form.Input required onChange={handleInputChange} name='teacherName' placeholder = \"Name of the Teacher\"  >Name of the teacher: Mr. {currentUser?.firstName}  {currentUser?.lastName} </Form.Input>\r\n                <Form.Input required onChange={handleInputChange} name='documentTitle' placeholder = \"Title of the Document\" /> \r\n                <Form.Input required onChange={handleInputChange} type='number' name='numberOfPage' placeholder = \"No of Pages in the doucument\"/> \r\n                <Form.Input required onChange={handleInputChange} type='number' name='numberOfCopies' placeholder = \"No of Copies necessary\"/> \r\n                <Form.Field required control='select' onChange={handleInputChange} name='sizeOfCopies' placeholder = \"Size of copies needed\"> \r\n                <option >-Size of copies needed -</option>\r\n                  <option  value='A4'>A4</option>\r\n                  <option  value='B4'>B4</option>\r\n                  <option  value='Other'>Other</option>\r\n                </Form.Field>\r\n                <Form.Field required control='select'  onChange={handleInputChange} name='purpose' placeholder = \"Purpose\">\r\n                <option >-Purpose-</option>\r\n                  <option  value='Teaching'>Teaching</option>\r\n                  <option  value='Research'>Research</option>\r\n                  <option  value='Other'>Other</option>\r\n                </Form.Field>\r\n                <Form.Field required control='select' onChange={handleInputChange} name='paperProvided' placeholder = \"Paper Provided\">\r\n                <option >-Paper provided-</option>\r\n                  <option  value='Yes'>Yes</option>\r\n                  <option  value='No'>No</option>\r\n                </Form.Field>\r\n                <Form.Field required control='select' onChange={handleInputChange} name='copyTo' placeholder = \"Copy To\">\r\n                <option >-Copy to-</option>\r\n                  <option  value='Double side'>Double side</option>\r\n                  <option  value='Single side'>Single side</option>\r\n\r\n                </Form.Field>\r\n\r\n                <Form.Input required  onChange={handleInputChange} type='datetime-local' name='dueDateTime' placeholder = \"Due Date and time\"/> \r\n               \r\n                <Header  size ='small' > I request the above copies for the above purpose of the departmant <br/> I certify that the above copies are necessary for obove mention purpose of the department</Header>\r\n                {currentUser && \r\n                  <Label ribbon> Signature <Divider /> <p> Mr.{currentUser?.firstName}  {currentUser?.lastName} <br/>   {currentUser?.designation} <br/> Department of {currentUser?.department} <br/> Faculty of Engineering, University of Ruhuna </p></Label>\r\n                }\r\n                \r\n                <Divider />\r\n                <TextArea placeholder=' Additional notes here (optional)' />\r\n                <Divider />\r\n                <Button style={{marginTop:'1em'}} size = 'big' loading={submitting} floated='right' positive type='Sumbit' content='Submit to the flow'/>\r\n\r\n                <Button style={{marginTop:'1em'}} onClick={()=> history.push('/dashboard')} size = 'big' floated='right'  type='button' content='Cancel'/>\r\n            </Form>\r\n\r\n            \r\n        </Segment>\r\n\r\n        <Card fluid>\r\n        \r\n              <Card.Content>\r\n                <Card.Header>Here is your Document flow</Card.Header>\r\n                <Card.Meta>\r\n                  <span> Check your document progress and status </span>\r\n                </Card.Meta>\r\n                <Card.Description>\r\n                <a>\r\n                  <Icon name='user' color ='orange' />\r\n                Apllicaion Current State: Draft document\r\n                </a>\r\n                </Card.Description>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n\r\n              <Step.Group  fluid>\r\n                <Step >\r\n                <Icon name='hourglass half' color='orange'/>\r\n                  <Step.Content>\r\n                    <Step.Title>Level 1: Submission</Step.Title>\r\n                    <Step.Description>You are requesting Risograph Copies <br/>Form id: {risographForm.risograghFormId}</Step.Description>\r\n                  </Step.Content>\r\n                </Step>\r\n\r\n                <Step >\r\n                \r\n                  <Icon name='hourglass half' color='orange'/>\r\n                  <Step.Content>\r\n                    <Step.Title>Final level: {risographForm.formStatus}</Step.Title>\r\n                    <Step.Description>Approval of Head of the Department</Step.Description>\r\n                  </Step.Content>\r\n                </Step>\r\n\r\n                <Step active>\r\n                  <Step.Content>\r\n                    <Step.Title>Print the Document</Step.Title>\r\n                  </Step.Content>\r\n                </Step>\r\n              </Step.Group>\r\n\r\n              \r\n              </Card.Content>\r\n      </Card>\r\n\r\n      </Container>\r\n        \r\n            \r\n    )\r\n}\r\n\r\nexport default observer(RisographForm);\r\n","import { observer } from 'mobx-react-lite'\r\nimport React, {  useContext, useEffect } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { Button, Card, Container, Header, Icon, Label, Step } from 'semantic-ui-react'\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent'\r\nimport { RootStoreContext } from '../../../app/stores/rootStore'\r\n\r\ninterface DetailParams{\r\n  id:string\r\n}\r\n\r\n const RisographFormDetails:React.FC<RouteComponentProps<DetailParams>> = ({match, history}) => {\r\n  \r\n  const rootStore = useContext(RootStoreContext)\r\n    const{selectedRisographForm:risographForm ,  loadRisographform, loadingInitial} = rootStore.risographFormStore;\r\n\r\n    useEffect(()=>{\r\n      loadRisographform(+match.params.id)\r\n    },[loadRisographform,match.params.id])\r\n   \r\n    if(loadingInitial || !risographForm) return <LoadingComponent content ='Loading activity..'/>\r\n\r\n    return (\r\n\r\n      <Container  style={{marginTop:'7em'}}>\r\n        <Card fluid>\r\n        <Header style={{marginTop:'2em'}} textAlign ='center' size ='small' >Department of Electrical and Infromation  <br/> Engineering Faculty of Engineering - University of Ruhuna</Header>\r\n        <Header as ='h1'  textAlign ='center'>Request for Risograph Copies</Header>\r\n          \r\n        <Card.Content>\r\n          <Card.Header> Document Title: {risographForm!.documentTitle} </Card.Header>\r\n          \r\n          <Card.Meta>\r\n            <span>This document is sumbitted by you at {risographForm!.initDateTime} for the approval of Head of the Department</span>\r\n          </Card.Meta>\r\n          <br></br>\r\n          <Card.Description>\r\n          <h4>Name of the teacher: {risographForm!.teacherName} </h4>\r\n            <h4>No. of pages in the document:  {risographForm!.numberOfPage} </h4>\r\n            <h4>No. of copies necessary:  {risographForm!.numberOfCopies} </h4>\r\n            <h4>Size of copies needed:  {risographForm!.sizeOfCopies} </h4>\r\n            <h4>Purpose:   {risographForm!.purpose} </h4>\r\n            <h4>Paper proided:   {risographForm!.paperProvided} </h4>\r\n            <h4>Copy to:   {risographForm!.copyTo} </h4>\r\n            <h4>Due date and time:   {risographForm!.dueDateTime} </h4>\r\n          </Card.Description>\r\n        </Card.Content>\r\n        \r\n        <Card.Content extra>\r\n              <Button  floated='left' onClick={()=> history.push('/dashboard/forms')} basic color='grey' content = 'Back to dashboard' />\r\n              {risographForm.formStatus === 'Pending' && \r\n              <Button  floated='right' icon labelPosition='left' onClick={()=> history.push('/dashboard/forms')}  color='red'>  <Icon name='arrow circle right' /> Cancel Request</Button>\r\n              }\r\n          \r\n          \r\n        </Card.Content>\r\n\r\n       \r\n      </Card>\r\n      \r\n      {risographForm.formStatus === 'Approved' && \r\n      <Card.Content>\r\n      <Label  basic color='green' size='large' >Your application Request Risogrph Copies has been {risographForm.formStatus}</Label>\r\n      <Button  floated='right' icon labelPosition='left'   color='green'>  <Icon name='print' /> Print PDF Document</Button>\r\n      </Card.Content>\r\n      \r\n      }\r\n      \r\n      <Card fluid>\r\n        \r\n        <Card.Content>\r\n          <Card.Header>Here is your Document flow</Card.Header>\r\n          <Card.Meta>\r\n            <span> Check your document progress and status </span>\r\n          </Card.Meta>\r\n          <Card.Description>\r\n          <a>\r\n            <Icon name='user' color ='orange' />\r\n           Apllicaion Current State: {risographForm!.formStatus}\r\n          </a>\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n\r\n        <Step.Group  fluid>\r\n          <Step >\r\n          <Icon name='check' color='green'/>\r\n            <Step.Content>\r\n              <Step.Title>Level 1: Submission</Step.Title>\r\n              <Step.Description>You requested Risograph Copies <br/>Form id: {risographForm.risograghFormId}</Step.Description>\r\n            </Step.Content>\r\n          </Step>\r\n\r\n          <Step >\r\n            {risographForm.formStatus==='Approved'&&\r\n            <Icon name='check' color='green'/>\r\n            }\r\n            {risographForm.formStatus==='Pending'&&\r\n            <Icon name='hourglass half' color='orange'/>\r\n            }\r\n          \r\n            <Step.Content>\r\n              <Step.Title>Final level: {risographForm.formStatus}</Step.Title>\r\n              <Step.Description>Approval of Head of the Department</Step.Description>\r\n            </Step.Content>\r\n          </Step>\r\n\r\n          <Step active>\r\n            <Step.Content>\r\n              <Step.Title>Print the Document</Step.Title>\r\n            </Step.Content>\r\n          </Step>\r\n        </Step.Group>\r\n\r\n        \r\n        </Card.Content>\r\n      </Card>\r\n      </Container>\r\n      \r\n\r\n    )\r\n}\r\n\r\nexport default observer(RisographFormDetails);\r\n","import { observer } from 'mobx-react-lite'\r\nimport React, {  useContext, useEffect } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { Button, ButtonGroup, Card, Container, Divider, Header, Icon, Label, Step } from 'semantic-ui-react'\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent'\r\nimport { RootStoreContext } from '../../../app/stores/rootStore'\r\n\r\ninterface DetailParams{\r\n  id:string\r\n}\r\n\r\n const RisographFormDetails:React.FC<RouteComponentProps<DetailParams>> = ({match, history}) => {\r\n  \r\n  const rootStore = useContext(RootStoreContext)\r\n    const{selectedRisographForm:risographForm ,  loadRisographform, loadingInitial, editRisographForm, submitting} = rootStore.risographFormStore;\r\n\r\n    useEffect(()=>{\r\n      loadRisographform(+match.params.id)\r\n    },[loadRisographform])\r\n\r\n   \r\n    const updateForm=(state:string)=>{\r\n      let newRisographForm={\r\n        risograghFormId:risographForm?.risograghFormId,\r\n        documentTitle:risographForm!.documentTitle,\r\n        teacherName:risographForm!.teacherName,\r\n        numberOfPage:risographForm!.numberOfPage,\r\n        numberOfCopies:risographForm!.numberOfCopies,\r\n        sizeOfCopies:risographForm!.sizeOfCopies,\r\n        purpose:risographForm!.purpose,\r\n        paperProvided:risographForm!.paperProvided,\r\n        copyTo:risographForm!.copyTo,\r\n        dueDateTime:risographForm!.dueDateTime,\r\n        \r\n        finalLevelUser:risographForm!.finalLevelUser,\r\n        formStatus: state,\r\n        finalUserDateTime:risographForm!.finalUserDateTime,\r\n\r\n        formModelId:risographForm!.formModelId,\r\n        formModelName:risographForm!.formModelName,\r\n        userId:risographForm!.userId,\r\n        initDateTime:risographForm!.initDateTime,\r\n        };\r\n    editRisographForm(newRisographForm)\r\n    }\r\n   \r\n    if(loadingInitial || !risographForm) return <LoadingComponent content ='Loading activity..'/>\r\n\r\n    return (\r\n\r\n      <Container style={{marginTop:'7em'}}>\r\n    \r\n        <Card fluid>\r\n        {risographForm.formStatus==='Pending'&&\r\n            <div  style={{ background:'FloralWhite'}}>\r\n            <Header as='h2'  style={{margin:'1em'}}>\r\n            <Icon color='green' name='envelope open' />\r\n                <Header.Content>\r\n                Approval pending Application\r\n                <Header.Subheader>Manage your preferences</Header.Subheader>\r\n                </Header.Content> \r\n            </Header>\r\n            </div>\r\n            }\r\n       \r\n        <Header as ='h2' style={{marginTop:'1em'}} textAlign ='center'>Request for Risograph Copies</Header>\r\n          \r\n        <Card.Content>\r\n          <Card.Header> Document Title: {risographForm!.documentTitle} </Card.Header>\r\n          \r\n          <Card.Meta>\r\n            <span>This document is sumbitted by you at {risographForm!.initDateTime} for the approval of Head of the Department</span>\r\n          </Card.Meta>\r\n          <br></br>\r\n          <Card.Description>\r\n          <h4>Name of the teacher: {risographForm!.teacherName} </h4>\r\n            <h4>No. of pages in the document:  {risographForm!.numberOfPage} </h4>\r\n            <h4>No. of copies necessary:  {risographForm!.numberOfCopies} </h4>\r\n            <h4>Size of copies needed:  {risographForm!.sizeOfCopies} </h4>\r\n            <h4>Purpose:   {risographForm!.purpose} </h4>\r\n            <h4>Paper proided:   {risographForm!.paperProvided} </h4>\r\n            <h4>Copy to:   {risographForm!.copyTo} </h4>\r\n            <h4>Due date and time:   {risographForm!.dueDateTime} </h4>\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n              <Button  floated='right' onClick={()=> history.push('/dashboard/forms')} basic color='grey' content = 'Back to dashboard' />\r\n          \r\n        </Card.Content>\r\n      </Card>\r\n        <Divider/>\r\n        \r\n        \r\n        {risographForm.formStatus=='Pending' ?(\r\n        <div>\r\n          <Header>This Application is under your review, Your action ?</Header>\r\n          <ButtonGroup  size='large' fluid>\r\n          <Button  onClick={()=>updateForm('Canceled')} loading={submitting} basic icon='trash' color='orange' content = 'Cancel Application' />\r\n          <Button  onClick={()=>updateForm('Rejected')} loading={submitting} basic icon='times' negative content = 'Reject Request' />\r\n          <Button onClick={()=>updateForm('Approved')} loading={submitting} icon='check' positive content = 'Approve Request' />\r\n  \r\n          </ButtonGroup>\r\n        </div>\r\n          \r\n        ):(\r\n          <Label color='green' basic size='large'>You {risographForm.formStatus} this application</Label>\r\n        )\r\n        }\r\n       \r\n        <Divider/>\r\n\r\n      <Card fluid>\r\n        \r\n        <Card.Content>\r\n          <Card.Header>Document flow</Card.Header>\r\n          <Card.Meta>\r\n            <span> Check the document progress and status </span>\r\n          </Card.Meta>\r\n          <Card.Description>\r\n          <a>\r\n            <Icon name='user' color ='orange' />\r\n           This request is pending for your approval\r\n          </a>\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n        <Step.Group  fluid>\r\n          <Step >\r\n          <Icon name='check' color='green'/>\r\n            <Step.Content>\r\n              <Step.Title>Level 1: Submission</Step.Title>\r\n              <Step.Description>{risographForm.teacherName} requested Risograph Copies  <br/>Form id: {risographForm.risograghFormId}</Step.Description>\r\n            </Step.Content>\r\n          </Step>\r\n\r\n          <Step >\r\n            {risographForm.formStatus==='Approved'&&\r\n            <Icon name='check' color='green'/>\r\n            }\r\n            {risographForm.formStatus==='Pending'&&\r\n            <Icon name='hourglass half' color='orange'/>\r\n            }\r\n          \r\n            <Step.Content>\r\n              <Step.Title>Final level(You): {risographForm.formStatus}</Step.Title>\r\n              <Step.Description>Approval of Head of the Department</Step.Description>\r\n            </Step.Content>\r\n          </Step>\r\n\r\n          \r\n        </Step.Group>\r\n\r\n        </Card.Content>\r\n      </Card>\r\n      </Container>\r\n        \r\n\r\n      \r\n\r\n\r\n    )\r\n}\r\n\r\nexport default observer(RisographFormDetails);\r\n","import React from 'react'\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport { Button, Card, Container, Grid, Image } from 'semantic-ui-react'\r\n\r\nexport const NewDoc = () => {\r\n    let {  url } = useRouteMatch();\r\n    return (\r\n        <Container >\r\n\r\n            <Card.Group itemsPerRow={4}  style={{marginTop:'5em'}}>\r\n            <Card fluid>\r\n                        <Image src='/assests/newDoc.png' wrapped ui={false} />\r\n                        <Card.Content>\r\n                        <Card.Header> Blank document </Card.Header>\r\n                        <Card.Meta>\r\n                            <span> Sumbmission flow: You can define document flow up to 5 Levels  </span>\r\n                        </Card.Meta>\r\n                        <Card.Description>\r\n                        This is black sheet\r\n                        </Card.Description>\r\n                        </Card.Content>\r\n                        <Card.Content extra>\r\n                        <Button  as ={Link}  to={`${url}/blankForm`}  fluid  color='blue' content = 'Download Form' />\r\n                        </Card.Content>\r\n                    </Card>\r\n\r\n                    <Card fluid>\r\n                        <Image src='/assests/risograph.jpg' wrapped ui={false} />\r\n                        <Card.Content>\r\n                        <Card.Header> Requesting for Risograph Copies </Card.Header>\r\n                        <Card.Meta>\r\n                            <span> Sumbmission flow: Lecture to Department Head </span>\r\n                        </Card.Meta>\r\n                        <Card.Description>\r\n                        Requesting for Risograph Copies\r\n                        </Card.Description>\r\n                        </Card.Content>\r\n                        <Card.Content extra>\r\n                        <Button  as ={Link}  to={`${url}/risographForm`} fluid  color='blue' content = 'Download Form' />\r\n                        </Card.Content>\r\n                    </Card>\r\n\r\n                    <Card fluid>\r\n                        <Image src='/assests/van.jpg' wrapped ui={false} />\r\n                        <Card.Content>\r\n                        <Card.Header> Application for Vehical Reservation </Card.Header>\r\n                        <Card.Meta>\r\n                            <span> Sumbmission flow: Lecture to Dean/AR via Department Head  </span>\r\n                        </Card.Meta>\r\n                        <Card.Description>\r\n                        Application for Vehical Reservation\r\n                        </Card.Description>\r\n                        </Card.Content>\r\n                        <Card.Content extra>\r\n                        <Button as ={Link}  to={`${url}/vehicalReservationForm`} fluid  color='blue' content = 'Download Form' />\r\n                        </Card.Content>\r\n                    </Card>\r\n\r\n                    <Card fluid>\r\n                        <Image src='/assests/bank.png' wrapped ui={false} />\r\n                        <Card.Content>\r\n                        <Card.Header> Bank Voucher Application </Card.Header>\r\n                        <Card.Meta>\r\n                            <span> Sumbmission flow: Lecture to Dean/AR via Department Head  </span>\r\n                        </Card.Meta>\r\n                        <Card.Description>\r\n                        Application for Bank Voucher\r\n                        </Card.Description>\r\n                        </Card.Content>\r\n                        <Card.Content extra>\r\n                        <Button fluid  color='blue' content = 'Download Form' />\r\n                        </Card.Content>\r\n                    </Card>\r\n\r\n                   \r\n            </Card.Group>\r\n           \r\n        </Container>\r\n    )\r\n}\r\n","import { Segment, Button, Header, Icon, Image, Container, Grid } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UnAtherized = () => {\r\n    return (\r\n        <Container style={{textAlign: \"center\"}}>\r\n        \r\n            <Header >\r\n            <Image src='/assests/unauth.png' style={{width: 'auto', height: 'auto'}} />\r\n            <Header textAlign ='center' size ='large' >Unautherized Access <br/> Please login first </Header>\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/' primary>\r\n                    Return to Login page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default UnAtherized;","\r\nimport { Segment, Button, Header, Icon, Image, Container } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <Container  style={{textAlign: \"center\"}}>\r\n        \r\n        <Header >\r\n        \r\n        <Image src='/assests/notfound.png'  style={{width: 'auto', height: 'auto'}} />\r\n        <Header textAlign ='center' size ='large' >Oops - we've looked everywhere but couldn't find this.  </Header>\r\n        </Header>\r\n        <Segment.Inline>\r\n            <Button as={Link} to='/dashboard' primary>\r\n                Return to dashboard page\r\n            </Button>\r\n        </Segment.Inline>\r\n    </Container>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React, { useContext } from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { RootStoreContext } from '../../stores/rootStore';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst ModalContainer = () => {\r\n    const rootStore = useContext(RootStoreContext);\r\n    const {modal: {open, body}, closeModal} = rootStore.modalStore;\r\n  return (\r\n    <Modal open={open} onClose={closeModal} size='large'>\r\n      <Modal.Content>{body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default observer(ModalContainer);","import React from 'react'\r\nimport { Button, Card, Container, Divider, Form, Header, Icon, Label, Segment, Step, TextArea } from 'semantic-ui-react'\r\nimport { history } from '../../..';\r\n\r\n const BlankForm = () => {\r\n    return (\r\n        <Container  style={{marginTop:'7em'}}>\r\n          \r\n          <Segment clearing>\r\n          <Header textAlign ='center' size ='small' >  Engineering Faculty of Engineering - University of Ruhuna</Header>\r\n          <Header as ='h1' dividing textAlign ='center'>Blank Document Sheet</Header>\r\n          \r\n        \r\n            <Form>\r\n            \r\n\r\n               \r\n\r\n                <Form.Input  name='title' placeholder = \"Document title\"/> \r\n               \r\n                \r\n                <Divider />\r\n                <TextArea rows='15' placeholder=' Type here' />\r\n                <Divider />\r\n                \r\n            </Form>\r\n\r\n            \r\n        </Segment>\r\n\r\n        <Card fluid>\r\n        \r\n              <Card.Content>\r\n                <Card.Header>Please Difine your Document flow</Card.Header>\r\n                <Card.Meta>\r\n                  <span> Check your document progress and status </span>\r\n                </Card.Meta>\r\n                <Card.Description>\r\n                <a>\r\n                  <Icon name='user' color ='orange' />\r\n                Apllicaion Current State: Draft document\r\n                </a>\r\n                </Card.Description>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n              <Divider />\r\n                <Button style={{marginTop:'1em'}} size = 'big'  floated='right' positive type='Sumbit' content='Submit to the flow'/>\r\n\r\n                <Button style={{marginTop:'1em'}} onClick={()=> history.push('/dashboard')} size = 'big' floated='right'  type='button' content='Cancel'/>\r\n              </Card.Content>\r\n      </Card>\r\n\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default BlankForm;\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { FormEvent, useContext, useEffect, useState } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Card, Container, Divider, Form, Header, Icon, Label, Segment, Step, TextArea } from 'semantic-ui-react'\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\nimport FormSuccessModal from '../../../app/layout/FormSuccessModal'\r\nimport { IVehicalReservationForm } from '../../../app/models/vehicalReservationForm';\r\n\r\n\r\n\r\n\r\n\r\nconst VehicalReservationForm: React.FC<RouteComponentProps> = ({history}) => {\r\n\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {createVehicalReservationForm ,submitting} = rootStore.vehicalReservationFormStore;\r\n\r\n  \r\n  const {setAppLoaded, userId}= rootStore.commonStore;\r\n  const {getUser} = rootStore.userStore\r\n  useEffect(()=>{\r\n    if(userId){\r\n      getUser(userId);\r\n    }\r\n  }, [getUser, setAppLoaded, userId])\r\n\r\n  \r\n  const{  currentUser} = rootStore.userStore\r\n\r\n    const initializeForm = () => {\r\n          return {\r\n            //vehicalReservationFormId:'',\r\n            applicant:'',\r\n            dueDateTime:'',\r\n            department:'',\r\n            purpose:'',\r\n            routeFrom:'',\r\n            routeTo:'',\r\n            returnFrom:'',\r\n            returnTo:'',\r\n            estimateTime:'',\r\n            estimateDistance:'',\r\n            vote:'',\r\n            projectNo:'',\r\n            officers:'',\r\n            formStatus:'Pending',\r\n            formCurrentLevel:1,\r\n\r\n            level2UserId:'',\r\n            isLevel2Approved:'',\r\n           // level2UserDateTime:'',\r\n\r\n            level3UserId:'',\r\n            isVehicalOK:'',\r\n            isLevel3Approved:'',\r\n            //level3UserDateTime:'',\r\n\r\n            level4UserId:'',\r\n            isLevel4Approved:'',\r\n           // level4UserDateTime:'',\r\n\r\n           // formModelId:'',\r\n            formModelName:'Vehical Reservation Form',\r\n            userId:'',\r\n            initDateTime: '' // this need to be current date time\r\n           \r\n          };\r\n        \r\n      };\r\n\r\n    const [vehicalReservationForm, setvehicalReservationForm] = useState<IVehicalReservationForm>(initializeForm);\r\n\r\n    const handleSubmit = () => {\r\n        let newVehicalReservationForm={\r\n            ...vehicalReservationForm, \r\n            initDateTime: '2021-03-24T16:49',\r\n            userId: window.localStorage.getItem('userId'),  //getting current user\r\n\r\n            applicant : currentUser!.firstName,\r\n            department: currentUser!.department,\r\n\r\n            level2UserId:'8dfaae4b-83a8-41cb-b69b-f7e04e236151',  // coonst hoD -> retrive relevent HoDs id\r\n            level3UserId:'71a76dba-9153-4400-ab8d-c012268d7fc6', // coonst AR -> retrive relevent AR id\r\n            level4UserId:'35b9e725-ed59-4018-95b7-54ce8d5f98d9'  // coonst Dean -> retrive relevent Dean id\r\n        };\r\n        createVehicalReservationForm(newVehicalReservationForm)\r\n   \r\n        \r\n      };\r\n\r\n    \r\n\r\n      const handleInputChange = (\r\n        event: FormEvent<HTMLInputElement | HTMLTextAreaElement>\r\n      ) => {\r\n        const { name, value } = event.currentTarget;\r\n        \r\n        setvehicalReservationForm({...vehicalReservationForm,[name]: value})\r\n        \r\n        \r\n      };\r\n\r\n    return (\r\n      <Container fluid style={{marginTop:'7em'}}>\r\n          <Container>\r\n           <FormSuccessModal/>\r\n          <Segment clearing>\r\n          <Header textAlign ='center' size ='small' >Department of Electrical and Infromation  <br/> Engineering Faculty of Engineering - University of Ruhuna</Header>\r\n          <Header as ='h1' dividing textAlign ='center'>Application for Vehical Reservation</Header>\r\n          \r\n        \r\n            <Form onSubmit = {handleSubmit}>\r\n            <Form.Input required onChange={handleInputChange} name='applicant' placeholder = \"Name of the applicant\"  >Name of the applicant: Mr. {currentUser?.firstName}  {currentUser?.lastName} </Form.Input>\r\n            <Form.Input required onChange={handleInputChange} name='department' placeholder = \"Name of the department\"  >Name of the department: {currentUser?.department}  </Form.Input>\r\n            <h5>  Vehical Due date and time</h5>\r\n            <Form.Input required onChange={handleInputChange} type='datetime-local'  name='dueDateTime' placeholder = \"Vehical due date and time\" /> \r\n            <Form.Input required onChange={handleInputChange}   name='purpose' placeholder = \"Purpose\" /> \r\n            <Form.Input required onChange={handleInputChange}  name='routeFrom' placeholder = \"Route From\"/> \r\n            <Form.Input required onChange={handleInputChange}  name='routeTo' placeholder = \"Route To\"/> \r\n            <Form.Input required onChange={handleInputChange}  name='returnFrom' placeholder = \"Return From\"/> \r\n            <Form.Input required onChange={handleInputChange}  name='returnTo' placeholder = \"Return To\"/> \r\n\r\n            <Form.Input required onChange={handleInputChange}  name='estimateTime' placeholder = \"Estimate Time\"/> \r\n            <Form.Input required onChange={handleInputChange}  name='estimateDistance' placeholder = \"Estimate Distance\"/> \r\n            <Form.Input required onChange={handleInputChange}  name='vote' placeholder = \"Vote\"/> \r\n            <Form.Input required onChange={handleInputChange}  name='projectNo' placeholder = \"Project Number\"/> \r\n\r\n            <TextArea required onChange={handleInputChange}  name='officers' placeholder = \"Name of the officers attent to the journey\"/> \r\n            \r\n            \r\n               \r\n\r\n     \r\n               \r\n                <Header  size ='small' > I request a vehical for above metioned puprose</Header>\r\n                {currentUser && \r\n                  <Label ribbon> Signature <Divider /> <p> Mr.{currentUser?.firstName}  {currentUser?.lastName} <br/>   {currentUser?.designation} <br/> Department of {currentUser?.department} <br/> Faculty of Engineering, University of Ruhuna </p></Label>\r\n                }\r\n                \r\n                <Divider />\r\n                <TextArea placeholder=' Additional notes here (optional)' />\r\n                <Divider />\r\n                <Button style={{marginTop:'1em'}} size = 'big' loading={submitting} floated='right' positive type='Sumbit' content='Submit to the flow'/>\r\n\r\n                <Button style={{marginTop:'1em'}} onClick={()=> history.push('/dashboard')} size = 'big' floated='right'  type='button' content='Cancel'/>\r\n            </Form>\r\n\r\n            \r\n        </Segment>\r\n\r\n        </Container>\r\n\r\n        <Card fluid>\r\n        \r\n              <Card.Content>\r\n                <Card.Header>Here is your Document flow</Card.Header>\r\n                <Card.Meta>\r\n                  <span> Check your document progress and status </span>\r\n                </Card.Meta>\r\n                <Card.Description>\r\n                <a>\r\n                  <Icon name='user' color ='orange' />\r\n                Apllicaion Current State: Draft document\r\n                </a>\r\n                </Card.Description>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n\r\n              <Step.Group  fluid>\r\n                <Step >\r\n                <Icon name='hourglass half' color='orange'/>\r\n                  <Step.Content>\r\n                    <Step.Title>Level 1: Submission</Step.Title>\r\n                    <Step.Description></Step.Description>\r\n                  </Step.Content>\r\n                </Step>\r\n\r\n                <Step >\r\n                \r\n                  <Icon name='hourglass half' color='orange'/>\r\n                  <Step.Content>\r\n                    <Step.Title>Level 2: </Step.Title>\r\n                    <Step.Description>Approval of Head of the Department</Step.Description>\r\n                  </Step.Content>\r\n                </Step>\r\n                <Step >\r\n                <Icon name='hourglass half' color='orange'/>\r\n                  <Step.Content>\r\n                  <Step.Title>Level 3: </Step.Title>\r\n                    <Step.Description>Approval of Head of the AR</Step.Description>\r\n                  </Step.Content>\r\n                </Step>\r\n\r\n                <Step >\r\n                <Icon name='hourglass half' color='orange'/>\r\n                  <Step.Content>\r\n                  <Step.Title>Final Level: </Step.Title>\r\n                    <Step.Description>Approval of Head of the Dean</Step.Description>\r\n                  </Step.Content>\r\n                </Step>\r\n\r\n\r\n                <Step active>\r\n                  <Step.Content>\r\n                    <Step.Title>Print the Document</Step.Title>\r\n                  </Step.Content>\r\n                </Step>\r\n              </Step.Group>\r\n\r\n              \r\n              </Card.Content>\r\n      </Card>\r\n\r\n      </Container>\r\n        \r\n            \r\n    )\r\n}\r\n\r\nexport default observer(VehicalReservationForm);\r\n","import { observer } from 'mobx-react-lite'\r\nimport React, {  useContext, useEffect } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { Button, Card, Container, Header, Icon, Label, Step } from 'semantic-ui-react'\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent'\r\nimport { RootStoreContext } from '../../../app/stores/rootStore'\r\n\r\ninterface DetailParams{\r\n  id:string\r\n}\r\n\r\n const VehicalReservationFormDetails:React.FC<RouteComponentProps<DetailParams>> = ({match, history}) => {\r\n  \r\n  const rootStore = useContext(RootStoreContext)\r\n    const{selectedVehicalReservationForm:vehicalReservationForm ,  loadVehicalReservationform, loadingInitial} = rootStore.vehicalReservationFormStore;\r\n\r\n    useEffect(()=>{\r\n        loadVehicalReservationform(+match.params.id)\r\n    },[loadVehicalReservationform,match.params.id])\r\n   \r\n    if(loadingInitial || !vehicalReservationForm) return <LoadingComponent content ='Loading activity..'/>\r\n\r\n    return (\r\n\r\n      <Container fluid style={{marginTop:'7em'}}>\r\n          <Container>\r\n        <Card fluid>\r\n        <Header style={{marginTop:'2em'}} textAlign ='center' size ='small' >Department of Electrical and Infromation  <br/> Engineering Faculty of Engineering - University of Ruhuna</Header>\r\n        <Header as ='h1'  textAlign ='center'>Vehical Reservation Application</Header>\r\n          \r\n        <Card.Content>\r\n          <Card.Header>Name of the  Applicant: {vehicalReservationForm!.applicant} </Card.Header>\r\n          \r\n          <Card.Meta>\r\n            <span>This document is sumbitted by you at {vehicalReservationForm!.initDateTime} for the approval of Head of the Department, AR and Dean</span>\r\n          </Card.Meta>\r\n          <br></br>\r\n          <Card.Description>\r\n          <h4>Department: {vehicalReservationForm!.department} </h4>\r\n            <h4>Purpose:  {vehicalReservationForm!.purpose} </h4>\r\n            <h4>Route form:  {vehicalReservationForm!.routeFrom} </h4>\r\n            <h4>Route To:  {vehicalReservationForm!.routeTo} </h4>\r\n            <h4>Return form:  {vehicalReservationForm!.returnFrom} </h4>\r\n            <h4>Return To:  {vehicalReservationForm!.returnTo} </h4>\r\n            <h4>Estimate time:   {vehicalReservationForm!.estimateTime} </h4>\r\n            <h4>Estimate Distance:   {vehicalReservationForm!.estimateDistance} </h4>\r\n            <h4>Vote:   {vehicalReservationForm!.vote} </h4>\r\n            <h4>Project Number:   {vehicalReservationForm!.projectNo} </h4>\r\n            <h4>Officers:   {vehicalReservationForm!.officers} </h4>\r\n          </Card.Description>\r\n        </Card.Content>\r\n        \r\n        <Card.Content extra>\r\n              <Button  floated='left' onClick={()=> history.push('/dashboard/forms')} basic color='grey' content = 'Back to dashboard' />\r\n              {vehicalReservationForm.formStatus === 'Pending' && \r\n              <Button  floated='right' icon labelPosition='left' onClick={()=> history.push('/dashboard/forms')}  color='red'>  <Icon name='arrow circle right' /> Cancel Request</Button>\r\n              }\r\n          \r\n          \r\n        </Card.Content>\r\n\r\n       \r\n      </Card>\r\n      \r\n      {vehicalReservationForm.formStatus === 'Approved' && \r\n      <Card.Content>\r\n      <Label  basic color='green' size='large' >Your application Request Risogrph Copies has been {vehicalReservationForm.formStatus}</Label>\r\n      <Button  floated='right' icon labelPosition='left'   color='green'>  <Icon name='print' /> Print PDF Document</Button>\r\n      </Card.Content>\r\n      \r\n      }\r\n      </Container>\r\n      <Card fluid>\r\n        \r\n        <Card.Content>\r\n          <Card.Header>Here is your Document flow</Card.Header>\r\n          <Card.Meta>\r\n            <span> Check your document progress and status </span>\r\n          </Card.Meta>\r\n          <Card.Description>\r\n          <a>\r\n            <Icon name='user' color ='orange' />\r\n           Apllicaion Current State: {vehicalReservationForm!.formStatus}\r\n          </a>\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n\r\n        <Step.Group  fluid>\r\n          <Step >\r\n          <Icon name='check' color='green'/>\r\n            <Step.Content>\r\n              <Step.Title>Level 1: Submission</Step.Title>\r\n              <Step.Description>You requested Risograph Copies <br/>Form id: {vehicalReservationForm.vehicalReservationFormId}</Step.Description>\r\n            </Step.Content>\r\n          </Step>\r\n\r\n          <Step >\r\n            {vehicalReservationForm.isLevel2Approved==='true'?( <Icon name='check' color='green'/> ):(\r\n               \r\n                <Icon name='hourglass half' color='orange'/>\r\n            )\r\n            }\r\n            <Step.Content>\r\n              <Step.Title>Level 2: Head of the Deparment</Step.Title>\r\n              <Step.Description>Approval of Head of the Department</Step.Description>\r\n            </Step.Content>\r\n          </Step>\r\n\r\n          <Step >\r\n            {vehicalReservationForm.isLevel3Approved=== 'true'?( <Icon name='check' color='green'/> ):(\r\n               \r\n                <Icon name='hourglass half' color='orange'/>\r\n            )\r\n            }\r\n            <Step.Content>\r\n              <Step.Title>Level 3:AR</Step.Title>\r\n              <Step.Description>Approval of Head of the Department</Step.Description>\r\n            </Step.Content>\r\n          </Step>\r\n\r\n          <Step >\r\n            {vehicalReservationForm.isLevel4Approved==='true'?(   <Icon name='check' color='green'/>):(\r\n              \r\n                <Icon name='hourglass half' color='orange'/>\r\n            )\r\n            }\r\n            <Step.Content>\r\n              <Step.Title>Final Level: Dean</Step.Title>\r\n              <Step.Description>Approval of Head of the Department</Step.Description>\r\n            </Step.Content>\r\n          </Step>\r\n\r\n          <Step active>\r\n            <Step.Content>\r\n              <Step.Title>Print the Document</Step.Title>\r\n            </Step.Content>\r\n          </Step>\r\n        </Step.Group>\r\n\r\n        \r\n        </Card.Content>\r\n      </Card>\r\n      </Container>\r\n      \r\n\r\n    )\r\n}\r\n\r\nexport default observer(VehicalReservationFormDetails);\r\n","import { observer } from 'mobx-react-lite'\r\nimport React, {  useContext, useEffect } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { Button, ButtonGroup, Card, Container, Divider, Header, Icon, Label, Step } from 'semantic-ui-react'\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent'\r\nimport { RootStoreContext } from '../../../app/stores/rootStore'\r\n\r\ninterface DetailParams{\r\n  id:string\r\n}\r\n\r\n const VehicalFormManage:React.FC<RouteComponentProps<DetailParams>> = ({match, history}) => {\r\n  \r\n  const rootStore = useContext(RootStoreContext)\r\n  const{ currentUser,getUser} = rootStore.userStore\r\n    const{selectedVehicalReservationForm:vehicalForm ,  loadVehicalReservationform, loadingInitial, editVehicalReservationForm, submitting} = rootStore.vehicalReservationFormStore;\r\n\r\n    const userId = window.localStorage.getItem('userId');\r\n\r\n    useEffect(()=>{\r\n        loadVehicalReservationform(+match.params.id)\r\n\r\n        if(userId){\r\n            getUser(userId);\r\n          }\r\n    },[loadVehicalReservationform,getUser])\r\n\r\n   \r\n    const updateForm=(state1:string ,state2:string ,state3:string ,state:string, i:number)=>{\r\n      let newVehicalForm={\r\n        vehicalReservationFormId:vehicalForm!.vehicalReservationFormId,\r\n        applicant:vehicalForm!.applicant,\r\n        dueDateTime:vehicalForm!.dueDateTime,\r\n        department:vehicalForm!.department,\r\n        purpose:vehicalForm!.purpose,\r\n        routeFrom:vehicalForm!.routeFrom,\r\n        routeTo:vehicalForm!.routeTo,\r\n        returnFrom:vehicalForm!.returnFrom,\r\n        returnTo:vehicalForm!.returnTo,\r\n        estimateTime:vehicalForm!.estimateTime,\r\n        estimateDistance:vehicalForm!.estimateDistance,\r\n        vote:vehicalForm!.vote,\r\n        projectNo:vehicalForm!.projectNo,\r\n        officers:vehicalForm!.officers,\r\n        formStatus:state,\r\n        formCurrentLevel:i,\r\n\r\n        level2UserId:vehicalForm!.level2UserId,\r\n        isLevel2Approved:state1,\r\n       // level2UserDateTime:vehicalForm.level2UserDateTime,\r\n\r\n        level3UserId:vehicalForm!.level3UserId,\r\n        isVehicalOK:state2,\r\n        isLevel3Approved:state2,\r\n       // level3UserDateTime:vehicalForm.level3UserDateTime,\r\n\r\n        level4UserId:vehicalForm!.level4UserId,\r\n        isLevel4Approved:state3,\r\n       // level4UserDateTime:vehicalForm.level4UserDateTime,\r\n\r\n        formModelId:vehicalForm!.formModelId,\r\n        formModelName:vehicalForm!.formModelName,\r\n        userId:vehicalForm!.userId,\r\n        initDateTime:vehicalForm!.initDateTime\r\n       \r\n        };\r\n    editVehicalReservationForm(newVehicalForm)\r\n    }\r\n   \r\n    if(loadingInitial || !vehicalForm) return <LoadingComponent content ='Loading activity..'/>\r\n\r\n    return (\r\n\r\n      <Container fluid style={{marginTop:'7em'}}>\r\n          <Container>\r\n        <Card fluid>\r\n        {vehicalForm.formStatus==='Pending'&&\r\n            <div  style={{ background:'FloralWhite'}}>\r\n            <Header as='h2'  style={{margin:'1em'}}>\r\n            <Icon color='green' name='envelope open' />\r\n                <Header.Content>\r\n                Approval pending Application\r\n                <Header.Subheader>Manage your preferences</Header.Subheader>\r\n                </Header.Content> \r\n            </Header>\r\n            </div>\r\n            }\r\n       \r\n        <Header as ='h2' style={{marginTop:'1em'}} textAlign ='center'>Request for Risograph Copies</Header>\r\n          \r\n        <Card.Content>\r\n          <Card.Header> Vehical Reservatio application by: {vehicalForm!.applicant} </Card.Header>\r\n          \r\n          <Card.Meta>\r\n            <span>This document is sumbitted by you at {vehicalForm!.initDateTime} for the approval of Head of the Department, AR and Dean</span>\r\n          </Card.Meta>\r\n          <br></br>\r\n          <Card.Description>\r\n          <h4>Department: {vehicalForm!.department} </h4>\r\n            <h4>Purpose:  {vehicalForm!.purpose} </h4>\r\n            <h4>Route form:  {vehicalForm!.routeFrom} </h4>\r\n            <h4>Route To:  {vehicalForm!.routeTo} </h4>\r\n            <h4>Return form:  {vehicalForm!.returnFrom} </h4>\r\n            <h4>Return To:  {vehicalForm!.returnTo} </h4>\r\n            <h4>Estimate time:   {vehicalForm!.estimateTime} </h4>\r\n            <h4>Estimate Distance:   {vehicalForm!.estimateDistance} </h4>\r\n            <h4>Vote:   {vehicalForm!.vote} </h4>\r\n            <h4>Project Number:   {vehicalForm!.projectNo} </h4>\r\n            <h4>Officers:   {vehicalForm!.officers} </h4>\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n              <Button  floated='right' onClick={()=> history.push('/dashboard/forms')} basic color='grey' content = 'Back to dashboard' />\r\n          \r\n        </Card.Content>\r\n      </Card>\r\n        <Divider/>\r\n        \r\n        \r\n        {vehicalForm.formCurrentLevel==1 && currentUser?.designation==='Head of the Department'&& vehicalForm.formStatus === 'Pending'&&\r\n        <div>\r\n          <Header>This Application is under your review, Your action ?</Header>\r\n          <ButtonGroup  size='large' fluid>\r\n          <Button  onClick={()=>updateForm('cancel','','','Canceled',2)} loading={submitting} basic icon='trash' color='orange' content = 'Cancel Application' />\r\n          <Button  onClick={()=>updateForm('false','','','Rejected',2)} loading={submitting} basic icon='times' negative content = 'Reject Request' />\r\n          <Button onClick={()=>updateForm('true','','','Pending',2)} loading={submitting} icon='check' positive content = 'Approve Request' />\r\n  \r\n          </ButtonGroup>\r\n        </div>\r\n        }\r\n\r\n        {vehicalForm.formCurrentLevel==2 && currentUser?.designation==='Assistant Registrar' && vehicalForm.formStatus === 'Pending'&&\r\n        <div>\r\n          <Header>This Application is under your review, Your action ?</Header>\r\n          <ButtonGroup  size='large' fluid>\r\n          <Button  onClick={()=>updateForm(vehicalForm.isLevel2Approved,'cancel','','Canceled',3)} loading={submitting} basic icon='trash' color='orange' content = 'Cancel Application' />\r\n          <Button  onClick={()=>updateForm(vehicalForm.isLevel2Approved,'false','','Rejected',3)} loading={submitting} basic icon='times' negative content = 'Reject Request' />\r\n          <Button onClick={()=>updateForm(vehicalForm.isLevel2Approved,'true','','Pending',3)} loading={submitting} icon='check' positive content = 'Approve Request' />\r\n  \r\n          </ButtonGroup>\r\n        </div>\r\n        }\r\n       \r\n       {vehicalForm.formCurrentLevel==3 && currentUser?.designation==='Dean'&& vehicalForm.formStatus === 'Pending'&&\r\n        <div>\r\n          <Header>This Application is under your review, Your action ?</Header>\r\n          <ButtonGroup  size='large' fluid>\r\n          <Button  onClick={()=>updateForm(vehicalForm.isLevel2Approved,vehicalForm.isLevel3Approved,'cancel','Canceled',4)} loading={submitting} basic icon='trash' color='orange' content = 'Cancel Application' />\r\n          <Button  onClick={()=>updateForm(vehicalForm.isLevel2Approved,vehicalForm.isLevel3Approved,'false','Rejected',4)} loading={submitting} basic icon='times' negative content = 'Reject Request' />\r\n          <Button onClick={()=>updateForm(vehicalForm.isLevel2Approved,vehicalForm.isLevel3Approved,'true','Approved',4)} loading={submitting} icon='check' positive content = 'Approve Request' />\r\n  \r\n          </ButtonGroup>\r\n        </div>\r\n        }\r\n        <Divider/>\r\n\r\n        </Container>\r\n        <Card fluid>\r\n        \r\n        <Card.Content>\r\n          <Card.Header>Here is your Document flow</Card.Header>\r\n          <Card.Meta>\r\n            <span> Check your document progress and status </span>\r\n          </Card.Meta>\r\n          <Card.Description>\r\n          <a>\r\n            <Icon name='user' color ='orange' />\r\n           Apllicaion Current State: {vehicalForm!.formStatus}\r\n          </a>\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n\r\n        <Step.Group  fluid>\r\n          <Step >\r\n          <Icon name='check' color='green'/>\r\n            <Step.Content>\r\n              <Step.Title>Level 1: Submission</Step.Title>\r\n              <Step.Description>You requested Risograph Copies <br/>Form id: {vehicalForm.vehicalReservationFormId}</Step.Description>\r\n            </Step.Content>\r\n          </Step>\r\n\r\n          <Step >\r\n            {vehicalForm.isLevel2Approved==='true'?(<Icon name='check' color='green'/> ):(\r\n                <Icon name='hourglass half' color='orange'/>\r\n            )\r\n            }\r\n            <Step.Content>\r\n              <Step.Title>Level 2: Head of the Deparment</Step.Title>\r\n              <Step.Description>Approval of Head of the Department</Step.Description>\r\n            </Step.Content>\r\n          </Step>\r\n\r\n          <Step >\r\n            {vehicalForm.isLevel3Approved=== 'true'?(  <Icon name='check' color='green'/>):(\r\n               \r\n                <Icon name='hourglass half' color='orange'/>\r\n            )\r\n            }\r\n            <Step.Content>\r\n              <Step.Title>Level 3:AR</Step.Title>\r\n              <Step.Description>Approval of Head of the Department</Step.Description>\r\n            </Step.Content>\r\n          </Step>\r\n\r\n          <Step >\r\n            {vehicalForm.isLevel4Approved==='true'?(  <Icon name='check' color='green'/>):(\r\n               \r\n                <Icon name='hourglass half' color='orange'/>\r\n            )\r\n            }\r\n            <Step.Content>\r\n              <Step.Title>Final Level: Dean</Step.Title>\r\n              <Step.Description>Approval of Head of the Department</Step.Description>\r\n            </Step.Content>\r\n          </Step>\r\n\r\n          <Step active>\r\n            <Step.Content>\r\n              <Step.Title>Print the Document</Step.Title>\r\n            </Step.Content>\r\n          </Step>\r\n        </Step.Group>\r\n\r\n        \r\n        </Card.Content>\r\n      </Card>\r\n      </Container>\r\n        \r\n\r\n      \r\n\r\n\r\n    )\r\n}\r\n\r\nexport default observer(VehicalFormManage);\r\n","import   { Fragment} from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from '../../features/nav/NavBar';\nimport  RisographDashboard  from '../../features/risographForms/dashboard/RisographDashboard';\nimport {observer} from 'mobx-react-lite'\nimport { Route, Switch} from 'react-router-dom'\nimport HomePage from '../../features/home/HomePage';\nimport RisographForm from '../../features/risographForms/form/RisographForm';\nimport RisographFormDetails from '../../features/risographForms/details/RisographFormDetails';\nimport RisographFormManage from '../../features/risographForms/details/RisographFormManage';\nimport { ToastContainer } from 'react-toastify';\nimport { NewDoc } from '../../features/newDoc/NewDoc';\nimport UnAutherized from './UnAutherized';\nimport NotFound from './NotFound';\nimport ModalContainer from '../common/modals/ModalContainer'\nimport BlankForm from '../../features/risographForms/form/BlankForm';\nimport VehicalReservationForm from '../../features/vehicalReservationForm/form/VeicalReservationForm'\nimport VehicalReservationFormDetails from '../../features/vehicalReservationForm/details/VehicalReserationFormDetails'\nimport VehicalFormManage from '../../features/vehicalReservationForm/details/VehicalFormMange'\n\nconst App =()=> {\n\n\n\n    return (\n      <Fragment>\n         <ModalContainer/>\n        <ToastContainer position ='bottom-right'/>\n         <Route exact path='/' component ={HomePage}/>\n         \n         <Route path ={'/(.+)'} render={() =>(\n           <Fragment>\n            <NavBar/>\n            <Container fluid style={{marginTop:'3.8em'}}>\n              <Switch>\n              <Route path='/dashboard' component ={RisographDashboard}/>\n              <Route exact path='/risographForms/:id' component ={RisographFormDetails}/>\n              <Route exact path='/vehicalReservationForms/:id' component ={VehicalReservationFormDetails}/>\n              <Route path='/risographForms/manage/:id' component ={RisographFormManage}/>\n              <Route path='/vehicalReservationForm/manage/:id' component ={VehicalFormManage}/>\n              <Route exact path='/createDoc' component ={NewDoc}/> \n              <Route path='/createDoc/risographForm' component ={RisographForm}/> \n              <Route path='/createDoc/blankForm' component ={BlankForm}/> \n              <Route path='/createDoc/vehicalReservationForm' component ={VehicalReservationForm}/> \n              <Route  path='/notfound' component={NotFound}/>\n              <Route  path='/unatherized' component={UnAutherized}/>\n              </Switch>\n            \n            </Container>\n           </Fragment>\n          \n         )}/>\n        \n      </Fragment>\n    );\n  \n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app/layout/style.css';\nimport {createBrowserHistory} from 'history'\nimport App from './app/layout/App';\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\nimport { BrowserRouter,  Router } from 'react-router-dom';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n  <App />\n  </Router>,\n  \n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}